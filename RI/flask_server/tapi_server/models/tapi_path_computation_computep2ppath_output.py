# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_path_computation_path_computation_service import TapiPathComputationPathComputationService  # noqa: F401,E501
from tapi_server import util


class TapiPathComputationComputep2ppathOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service=None):  # noqa: E501
        """TapiPathComputationComputep2ppathOutput - a model defined in OpenAPI

        :param service: The service of this TapiPathComputationComputep2ppathOutput.  # noqa: E501
        :type service: TapiPathComputationPathComputationService
        """
        self.openapi_types = {
            'service': TapiPathComputationPathComputationService
        }

        self.attribute_map = {
            'service': 'service'
        }

        self._service = service

    @classmethod
    def from_dict(cls, dikt) -> 'TapiPathComputationComputep2ppathOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.path.computation.computep2ppath.Output of this TapiPathComputationComputep2ppathOutput.  # noqa: E501
        :rtype: TapiPathComputationComputep2ppathOutput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service(self):
        """Gets the service of this TapiPathComputationComputep2ppathOutput.


        :return: The service of this TapiPathComputationComputep2ppathOutput.
        :rtype: TapiPathComputationPathComputationService
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this TapiPathComputationComputep2ppathOutput.


        :param service: The service of this TapiPathComputationComputep2ppathOutput.
        :type service: TapiPathComputationPathComputationService
        """

        self._service = service
