# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_path_computation_computep2ppath_output import TapiPathComputationComputep2ppathOutput  # noqa: F401,E501
from tapi_server import util


class TapiPathComputationComputeP2PPath(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, output=None):  # noqa: E501
        """TapiPathComputationComputeP2PPath - a model defined in OpenAPI

        :param output: The output of this TapiPathComputationComputeP2PPath.  # noqa: E501
        :type output: TapiPathComputationComputep2ppathOutput
        """
        self.openapi_types = {
            'output': TapiPathComputationComputep2ppathOutput
        }

        self.attribute_map = {
            'output': 'output'
        }

        self._output = output

    @classmethod
    def from_dict(cls, dikt) -> 'TapiPathComputationComputeP2PPath':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.path.computation.ComputeP2PPath of this TapiPathComputationComputeP2PPath.  # noqa: E501
        :rtype: TapiPathComputationComputeP2PPath
        """
        return util.deserialize_model(dikt, cls)

    @property
    def output(self):
        """Gets the output of this TapiPathComputationComputeP2PPath.


        :return: The output of this TapiPathComputationComputeP2PPath.
        :rtype: TapiPathComputationComputep2ppathOutput
        """
        return self._output

    @output.setter
    def output(self, output):
        """Sets the output of this TapiPathComputationComputeP2PPath.


        :param output: The output of this TapiPathComputationComputeP2PPath.
        :type output: TapiPathComputationComputep2ppathOutput
        """

        self._output = output
