# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server import util


class TapiOduOduTcmMipPac(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tcm_field=None):  # noqa: E501
        """TapiOduOduTcmMipPac - a model defined in OpenAPI

        :param tcm_field: The tcm_field of this TapiOduOduTcmMipPac.  # noqa: E501
        :type tcm_field: int
        """
        self.openapi_types = {
            'tcm_field': int
        }

        self.attribute_map = {
            'tcm_field': 'tcm-field'
        }

        self._tcm_field = tcm_field

    @classmethod
    def from_dict(cls, dikt) -> 'TapiOduOduTcmMipPac':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.odu.OduTcmMipPac of this TapiOduOduTcmMipPac.  # noqa: E501
        :rtype: TapiOduOduTcmMipPac
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tcm_field(self):
        """Gets the tcm_field of this TapiOduOduTcmMipPac.

        This attribute indicates the tandem connection monitoring field of the ODU OH.  # noqa: E501

        :return: The tcm_field of this TapiOduOduTcmMipPac.
        :rtype: int
        """
        return self._tcm_field

    @tcm_field.setter
    def tcm_field(self, tcm_field):
        """Sets the tcm_field of this TapiOduOduTcmMipPac.

        This attribute indicates the tandem connection monitoring field of the ODU OH.  # noqa: E501

        :param tcm_field: The tcm_field of this TapiOduOduTcmMipPac.
        :type tcm_field: int
        """

        self._tcm_field = tcm_field
