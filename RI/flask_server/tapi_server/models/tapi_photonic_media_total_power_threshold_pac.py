# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server import util


class TapiPhotonicMediaTotalPowerThresholdPac(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_power_upper_warn_threshold_default=None, total_power_lower_warn_threshold_min=None, total_power_upper_warn_threshold_min=None, total_power_upper_warn_threshold_max=None, total_power_lower_warn_threshold_max=None, total_power_lower_warn_threshold_default=None):  # noqa: E501
        """TapiPhotonicMediaTotalPowerThresholdPac - a model defined in OpenAPI

        :param total_power_upper_warn_threshold_default: The total_power_upper_warn_threshold_default of this TapiPhotonicMediaTotalPowerThresholdPac.  # noqa: E501
        :type total_power_upper_warn_threshold_default: str
        :param total_power_lower_warn_threshold_min: The total_power_lower_warn_threshold_min of this TapiPhotonicMediaTotalPowerThresholdPac.  # noqa: E501
        :type total_power_lower_warn_threshold_min: str
        :param total_power_upper_warn_threshold_min: The total_power_upper_warn_threshold_min of this TapiPhotonicMediaTotalPowerThresholdPac.  # noqa: E501
        :type total_power_upper_warn_threshold_min: str
        :param total_power_upper_warn_threshold_max: The total_power_upper_warn_threshold_max of this TapiPhotonicMediaTotalPowerThresholdPac.  # noqa: E501
        :type total_power_upper_warn_threshold_max: str
        :param total_power_lower_warn_threshold_max: The total_power_lower_warn_threshold_max of this TapiPhotonicMediaTotalPowerThresholdPac.  # noqa: E501
        :type total_power_lower_warn_threshold_max: str
        :param total_power_lower_warn_threshold_default: The total_power_lower_warn_threshold_default of this TapiPhotonicMediaTotalPowerThresholdPac.  # noqa: E501
        :type total_power_lower_warn_threshold_default: str
        """
        self.openapi_types = {
            'total_power_upper_warn_threshold_default': str,
            'total_power_lower_warn_threshold_min': str,
            'total_power_upper_warn_threshold_min': str,
            'total_power_upper_warn_threshold_max': str,
            'total_power_lower_warn_threshold_max': str,
            'total_power_lower_warn_threshold_default': str
        }

        self.attribute_map = {
            'total_power_upper_warn_threshold_default': 'total-power-upper-warn-threshold-default',
            'total_power_lower_warn_threshold_min': 'total-power-lower-warn-threshold-min',
            'total_power_upper_warn_threshold_min': 'total-power-upper-warn-threshold-min',
            'total_power_upper_warn_threshold_max': 'total-power-upper-warn-threshold-max',
            'total_power_lower_warn_threshold_max': 'total-power-lower-warn-threshold-max',
            'total_power_lower_warn_threshold_default': 'total-power-lower-warn-threshold-default'
        }

        self._total_power_upper_warn_threshold_default = total_power_upper_warn_threshold_default
        self._total_power_lower_warn_threshold_min = total_power_lower_warn_threshold_min
        self._total_power_upper_warn_threshold_min = total_power_upper_warn_threshold_min
        self._total_power_upper_warn_threshold_max = total_power_upper_warn_threshold_max
        self._total_power_lower_warn_threshold_max = total_power_lower_warn_threshold_max
        self._total_power_lower_warn_threshold_default = total_power_lower_warn_threshold_default

    @classmethod
    def from_dict(cls, dikt) -> 'TapiPhotonicMediaTotalPowerThresholdPac':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.photonic.media.TotalPowerThresholdPac of this TapiPhotonicMediaTotalPowerThresholdPac.  # noqa: E501
        :rtype: TapiPhotonicMediaTotalPowerThresholdPac
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_power_upper_warn_threshold_default(self):
        """Gets the total_power_upper_warn_threshold_default of this TapiPhotonicMediaTotalPowerThresholdPac.

        Can read the value of the default  threshold that was set  # noqa: E501

        :return: The total_power_upper_warn_threshold_default of this TapiPhotonicMediaTotalPowerThresholdPac.
        :rtype: str
        """
        return self._total_power_upper_warn_threshold_default

    @total_power_upper_warn_threshold_default.setter
    def total_power_upper_warn_threshold_default(self, total_power_upper_warn_threshold_default):
        """Sets the total_power_upper_warn_threshold_default of this TapiPhotonicMediaTotalPowerThresholdPac.

        Can read the value of the default  threshold that was set  # noqa: E501

        :param total_power_upper_warn_threshold_default: The total_power_upper_warn_threshold_default of this TapiPhotonicMediaTotalPowerThresholdPac.
        :type total_power_upper_warn_threshold_default: str
        """

        self._total_power_upper_warn_threshold_default = total_power_upper_warn_threshold_default

    @property
    def total_power_lower_warn_threshold_min(self):
        """Gets the total_power_lower_warn_threshold_min of this TapiPhotonicMediaTotalPowerThresholdPac.

        Can read the value of the lower threshold that was set  # noqa: E501

        :return: The total_power_lower_warn_threshold_min of this TapiPhotonicMediaTotalPowerThresholdPac.
        :rtype: str
        """
        return self._total_power_lower_warn_threshold_min

    @total_power_lower_warn_threshold_min.setter
    def total_power_lower_warn_threshold_min(self, total_power_lower_warn_threshold_min):
        """Sets the total_power_lower_warn_threshold_min of this TapiPhotonicMediaTotalPowerThresholdPac.

        Can read the value of the lower threshold that was set  # noqa: E501

        :param total_power_lower_warn_threshold_min: The total_power_lower_warn_threshold_min of this TapiPhotonicMediaTotalPowerThresholdPac.
        :type total_power_lower_warn_threshold_min: str
        """

        self._total_power_lower_warn_threshold_min = total_power_lower_warn_threshold_min

    @property
    def total_power_upper_warn_threshold_min(self):
        """Gets the total_power_upper_warn_threshold_min of this TapiPhotonicMediaTotalPowerThresholdPac.

        Can read the value of the lower threshold that was set  # noqa: E501

        :return: The total_power_upper_warn_threshold_min of this TapiPhotonicMediaTotalPowerThresholdPac.
        :rtype: str
        """
        return self._total_power_upper_warn_threshold_min

    @total_power_upper_warn_threshold_min.setter
    def total_power_upper_warn_threshold_min(self, total_power_upper_warn_threshold_min):
        """Sets the total_power_upper_warn_threshold_min of this TapiPhotonicMediaTotalPowerThresholdPac.

        Can read the value of the lower threshold that was set  # noqa: E501

        :param total_power_upper_warn_threshold_min: The total_power_upper_warn_threshold_min of this TapiPhotonicMediaTotalPowerThresholdPac.
        :type total_power_upper_warn_threshold_min: str
        """

        self._total_power_upper_warn_threshold_min = total_power_upper_warn_threshold_min

    @property
    def total_power_upper_warn_threshold_max(self):
        """Gets the total_power_upper_warn_threshold_max of this TapiPhotonicMediaTotalPowerThresholdPac.

        Can  read the value of the upper threshold that was set  # noqa: E501

        :return: The total_power_upper_warn_threshold_max of this TapiPhotonicMediaTotalPowerThresholdPac.
        :rtype: str
        """
        return self._total_power_upper_warn_threshold_max

    @total_power_upper_warn_threshold_max.setter
    def total_power_upper_warn_threshold_max(self, total_power_upper_warn_threshold_max):
        """Sets the total_power_upper_warn_threshold_max of this TapiPhotonicMediaTotalPowerThresholdPac.

        Can  read the value of the upper threshold that was set  # noqa: E501

        :param total_power_upper_warn_threshold_max: The total_power_upper_warn_threshold_max of this TapiPhotonicMediaTotalPowerThresholdPac.
        :type total_power_upper_warn_threshold_max: str
        """

        self._total_power_upper_warn_threshold_max = total_power_upper_warn_threshold_max

    @property
    def total_power_lower_warn_threshold_max(self):
        """Gets the total_power_lower_warn_threshold_max of this TapiPhotonicMediaTotalPowerThresholdPac.

        Can  read the value of the upper threshold that was set  # noqa: E501

        :return: The total_power_lower_warn_threshold_max of this TapiPhotonicMediaTotalPowerThresholdPac.
        :rtype: str
        """
        return self._total_power_lower_warn_threshold_max

    @total_power_lower_warn_threshold_max.setter
    def total_power_lower_warn_threshold_max(self, total_power_lower_warn_threshold_max):
        """Sets the total_power_lower_warn_threshold_max of this TapiPhotonicMediaTotalPowerThresholdPac.

        Can  read the value of the upper threshold that was set  # noqa: E501

        :param total_power_lower_warn_threshold_max: The total_power_lower_warn_threshold_max of this TapiPhotonicMediaTotalPowerThresholdPac.
        :type total_power_lower_warn_threshold_max: str
        """

        self._total_power_lower_warn_threshold_max = total_power_lower_warn_threshold_max

    @property
    def total_power_lower_warn_threshold_default(self):
        """Gets the total_power_lower_warn_threshold_default of this TapiPhotonicMediaTotalPowerThresholdPac.

        Can read the value of the default  threshold that was set  # noqa: E501

        :return: The total_power_lower_warn_threshold_default of this TapiPhotonicMediaTotalPowerThresholdPac.
        :rtype: str
        """
        return self._total_power_lower_warn_threshold_default

    @total_power_lower_warn_threshold_default.setter
    def total_power_lower_warn_threshold_default(self, total_power_lower_warn_threshold_default):
        """Sets the total_power_lower_warn_threshold_default of this TapiPhotonicMediaTotalPowerThresholdPac.

        Can read the value of the default  threshold that was set  # noqa: E501

        :param total_power_lower_warn_threshold_default: The total_power_lower_warn_threshold_default of this TapiPhotonicMediaTotalPowerThresholdPac.
        :type total_power_lower_warn_threshold_default: str
        """

        self._total_power_lower_warn_threshold_default = total_power_lower_warn_threshold_default
