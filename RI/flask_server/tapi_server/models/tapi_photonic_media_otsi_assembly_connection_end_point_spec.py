# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_photonic_media_fec_properties_pac import TapiPhotonicMediaFecPropertiesPac  # noqa: F401,E501
from tapi_server.models.tapi_photonic_media_otsi_gserver_adaptation_pac import TapiPhotonicMediaOtsiGserverAdaptationPac  # noqa: F401,E501
from tapi_server import util


class TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, otsi_adapter=None, fec_parameters=None):  # noqa: E501
        """TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec - a model defined in OpenAPI

        :param otsi_adapter: The otsi_adapter of this TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec.  # noqa: E501
        :type otsi_adapter: TapiPhotonicMediaOtsiGserverAdaptationPac
        :param fec_parameters: The fec_parameters of this TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec.  # noqa: E501
        :type fec_parameters: TapiPhotonicMediaFecPropertiesPac
        """
        self.openapi_types = {
            'otsi_adapter': TapiPhotonicMediaOtsiGserverAdaptationPac,
            'fec_parameters': TapiPhotonicMediaFecPropertiesPac
        }

        self.attribute_map = {
            'otsi_adapter': 'otsi-adapter',
            'fec_parameters': 'fec-parameters'
        }

        self._otsi_adapter = otsi_adapter
        self._fec_parameters = fec_parameters

    @classmethod
    def from_dict(cls, dikt) -> 'TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.photonic.media.OtsiAssemblyConnectionEndPointSpec of this TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec.  # noqa: E501
        :rtype: TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec
        """
        return util.deserialize_model(dikt, cls)

    @property
    def otsi_adapter(self):
        """Gets the otsi_adapter of this TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec.


        :return: The otsi_adapter of this TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec.
        :rtype: TapiPhotonicMediaOtsiGserverAdaptationPac
        """
        return self._otsi_adapter

    @otsi_adapter.setter
    def otsi_adapter(self, otsi_adapter):
        """Sets the otsi_adapter of this TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec.


        :param otsi_adapter: The otsi_adapter of this TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec.
        :type otsi_adapter: TapiPhotonicMediaOtsiGserverAdaptationPac
        """

        self._otsi_adapter = otsi_adapter

    @property
    def fec_parameters(self):
        """Gets the fec_parameters of this TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec.


        :return: The fec_parameters of this TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec.
        :rtype: TapiPhotonicMediaFecPropertiesPac
        """
        return self._fec_parameters

    @fec_parameters.setter
    def fec_parameters(self, fec_parameters):
        """Sets the fec_parameters of this TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec.


        :param fec_parameters: The fec_parameters of this TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec.
        :type fec_parameters: TapiPhotonicMediaFecPropertiesPac
        """

        self._fec_parameters = fec_parameters
