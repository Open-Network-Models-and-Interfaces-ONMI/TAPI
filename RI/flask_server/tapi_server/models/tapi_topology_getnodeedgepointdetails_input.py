# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server import util


class TapiTopologyGetnodeedgepointdetailsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ep_id_or_name=None, node_id_or_name=None, topology_id_or_name=None):  # noqa: E501
        """TapiTopologyGetnodeedgepointdetailsInput - a model defined in OpenAPI

        :param ep_id_or_name: The ep_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.  # noqa: E501
        :type ep_id_or_name: str
        :param node_id_or_name: The node_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.  # noqa: E501
        :type node_id_or_name: str
        :param topology_id_or_name: The topology_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.  # noqa: E501
        :type topology_id_or_name: str
        """
        self.openapi_types = {
            'ep_id_or_name': str,
            'node_id_or_name': str,
            'topology_id_or_name': str
        }

        self.attribute_map = {
            'ep_id_or_name': 'ep-id-or-name',
            'node_id_or_name': 'node-id-or-name',
            'topology_id_or_name': 'topology-id-or-name'
        }

        self._ep_id_or_name = ep_id_or_name
        self._node_id_or_name = node_id_or_name
        self._topology_id_or_name = topology_id_or_name

    @classmethod
    def from_dict(cls, dikt) -> 'TapiTopologyGetnodeedgepointdetailsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.topology.getnodeedgepointdetails.Input of this TapiTopologyGetnodeedgepointdetailsInput.  # noqa: E501
        :rtype: TapiTopologyGetnodeedgepointdetailsInput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ep_id_or_name(self):
        """Gets the ep_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.

        none  # noqa: E501

        :return: The ep_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.
        :rtype: str
        """
        return self._ep_id_or_name

    @ep_id_or_name.setter
    def ep_id_or_name(self, ep_id_or_name):
        """Sets the ep_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.

        none  # noqa: E501

        :param ep_id_or_name: The ep_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.
        :type ep_id_or_name: str
        """

        self._ep_id_or_name = ep_id_or_name

    @property
    def node_id_or_name(self):
        """Gets the node_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.

        none  # noqa: E501

        :return: The node_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.
        :rtype: str
        """
        return self._node_id_or_name

    @node_id_or_name.setter
    def node_id_or_name(self, node_id_or_name):
        """Sets the node_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.

        none  # noqa: E501

        :param node_id_or_name: The node_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.
        :type node_id_or_name: str
        """

        self._node_id_or_name = node_id_or_name

    @property
    def topology_id_or_name(self):
        """Gets the topology_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.

        none  # noqa: E501

        :return: The topology_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.
        :rtype: str
        """
        return self._topology_id_or_name

    @topology_id_or_name.setter
    def topology_id_or_name(self, topology_id_or_name):
        """Sets the topology_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.

        none  # noqa: E501

        :param topology_id_or_name: The topology_id_or_name of this TapiTopologyGetnodeedgepointdetailsInput.
        :type topology_id_or_name: str
        """

        self._topology_id_or_name = topology_id_or_name
