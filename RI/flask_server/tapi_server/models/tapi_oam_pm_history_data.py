# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_common_local_class import TapiCommonLocalClass  # noqa: F401,E501
from tapi_server.models.tapi_common_name_and_value import TapiCommonNameAndValue  # noqa: F401,E501
from tapi_server.models.tapi_common_time_period import TapiCommonTimePeriod  # noqa: F401,E501
from tapi_server import util


class TapiOamPmHistoryData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, local_id=None, granularity_period=None, period_end_time=None, suspect_interval_flag=False):  # noqa: E501
        """TapiOamPmHistoryData - a model defined in OpenAPI

        :param name: The name of this TapiOamPmHistoryData.  # noqa: E501
        :type name: List[TapiCommonNameAndValue]
        :param local_id: The local_id of this TapiOamPmHistoryData.  # noqa: E501
        :type local_id: str
        :param granularity_period: The granularity_period of this TapiOamPmHistoryData.  # noqa: E501
        :type granularity_period: TapiCommonTimePeriod
        :param period_end_time: The period_end_time of this TapiOamPmHistoryData.  # noqa: E501
        :type period_end_time: str
        :param suspect_interval_flag: The suspect_interval_flag of this TapiOamPmHistoryData.  # noqa: E501
        :type suspect_interval_flag: bool
        """
        self.openapi_types = {
            'name': List[TapiCommonNameAndValue],
            'local_id': str,
            'granularity_period': TapiCommonTimePeriod,
            'period_end_time': str,
            'suspect_interval_flag': bool
        }

        self.attribute_map = {
            'name': 'name',
            'local_id': 'local-id',
            'granularity_period': 'granularity-period',
            'period_end_time': 'period-end-time',
            'suspect_interval_flag': 'suspect-interval-flag'
        }

        self._name = name
        self._local_id = local_id
        self._granularity_period = granularity_period
        self._period_end_time = period_end_time
        self._suspect_interval_flag = suspect_interval_flag

    @classmethod
    def from_dict(cls, dikt) -> 'TapiOamPmHistoryData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.oam.PmHistoryData of this TapiOamPmHistoryData.  # noqa: E501
        :rtype: TapiOamPmHistoryData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this TapiOamPmHistoryData.

        List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.  # noqa: E501

        :return: The name of this TapiOamPmHistoryData.
        :rtype: List[TapiCommonNameAndValue]
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TapiOamPmHistoryData.

        List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.  # noqa: E501

        :param name: The name of this TapiOamPmHistoryData.
        :type name: List[TapiCommonNameAndValue]
        """

        self._name = name

    @property
    def local_id(self):
        """Gets the local_id of this TapiOamPmHistoryData.

        none  # noqa: E501

        :return: The local_id of this TapiOamPmHistoryData.
        :rtype: str
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this TapiOamPmHistoryData.

        none  # noqa: E501

        :param local_id: The local_id of this TapiOamPmHistoryData.
        :type local_id: str
        """

        self._local_id = local_id

    @property
    def granularity_period(self):
        """Gets the granularity_period of this TapiOamPmHistoryData.


        :return: The granularity_period of this TapiOamPmHistoryData.
        :rtype: TapiCommonTimePeriod
        """
        return self._granularity_period

    @granularity_period.setter
    def granularity_period(self, granularity_period):
        """Sets the granularity_period of this TapiOamPmHistoryData.


        :param granularity_period: The granularity_period of this TapiOamPmHistoryData.
        :type granularity_period: TapiCommonTimePeriod
        """

        self._granularity_period = granularity_period

    @property
    def period_end_time(self):
        """Gets the period_end_time of this TapiOamPmHistoryData.

        none  # noqa: E501

        :return: The period_end_time of this TapiOamPmHistoryData.
        :rtype: str
        """
        return self._period_end_time

    @period_end_time.setter
    def period_end_time(self, period_end_time):
        """Sets the period_end_time of this TapiOamPmHistoryData.

        none  # noqa: E501

        :param period_end_time: The period_end_time of this TapiOamPmHistoryData.
        :type period_end_time: str
        """

        self._period_end_time = period_end_time

    @property
    def suspect_interval_flag(self):
        """Gets the suspect_interval_flag of this TapiOamPmHistoryData.

        This attribute indicates that the performance data may not be reliable.  # noqa: E501

        :return: The suspect_interval_flag of this TapiOamPmHistoryData.
        :rtype: bool
        """
        return self._suspect_interval_flag

    @suspect_interval_flag.setter
    def suspect_interval_flag(self, suspect_interval_flag):
        """Sets the suspect_interval_flag of this TapiOamPmHistoryData.

        This attribute indicates that the performance data may not be reliable.  # noqa: E501

        :param suspect_interval_flag: The suspect_interval_flag of this TapiOamPmHistoryData.
        :type suspect_interval_flag: bool
        """

        self._suspect_interval_flag = suspect_interval_flag
