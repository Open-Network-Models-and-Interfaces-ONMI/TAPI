# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_common_global_class import TapiCommonGlobalClass  # noqa: F401,E501
from tapi_server.models.tapi_common_name_and_value import TapiCommonNameAndValue  # noqa: F401,E501
from tapi_server.models.tapi_oam_pm_bin_data import TapiOamPmBinData  # noqa: F401,E501
from tapi_server.models.tapi_oam_pm_threshold_data import TapiOamPmThresholdData  # noqa: F401,E501
from tapi_server import util


class TapiOamOamProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, uuid=None, pm_threshold_data=None, pm_bin_data=None):  # noqa: E501
        """TapiOamOamProfile - a model defined in OpenAPI

        :param name: The name of this TapiOamOamProfile.  # noqa: E501
        :type name: List[TapiCommonNameAndValue]
        :param uuid: The uuid of this TapiOamOamProfile.  # noqa: E501
        :type uuid: str
        :param pm_threshold_data: The pm_threshold_data of this TapiOamOamProfile.  # noqa: E501
        :type pm_threshold_data: List[TapiOamPmThresholdData]
        :param pm_bin_data: The pm_bin_data of this TapiOamOamProfile.  # noqa: E501
        :type pm_bin_data: List[TapiOamPmBinData]
        """
        self.openapi_types = {
            'name': List[TapiCommonNameAndValue],
            'uuid': str,
            'pm_threshold_data': List[TapiOamPmThresholdData],
            'pm_bin_data': List[TapiOamPmBinData]
        }

        self.attribute_map = {
            'name': 'name',
            'uuid': 'uuid',
            'pm_threshold_data': 'pm-threshold-data',
            'pm_bin_data': 'pm-bin-data'
        }

        self._name = name
        self._uuid = uuid
        self._pm_threshold_data = pm_threshold_data
        self._pm_bin_data = pm_bin_data

    @classmethod
    def from_dict(cls, dikt) -> 'TapiOamOamProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.oam.OamProfile of this TapiOamOamProfile.  # noqa: E501
        :rtype: TapiOamOamProfile
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this TapiOamOamProfile.

        List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.  # noqa: E501

        :return: The name of this TapiOamOamProfile.
        :rtype: List[TapiCommonNameAndValue]
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TapiOamOamProfile.

        List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.  # noqa: E501

        :param name: The name of this TapiOamOamProfile.
        :type name: List[TapiCommonNameAndValue]
        """

        self._name = name

    @property
    def uuid(self):
        """Gets the uuid of this TapiOamOamProfile.

        UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.                      UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.                      Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}                       Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6  # noqa: E501

        :return: The uuid of this TapiOamOamProfile.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this TapiOamOamProfile.

        UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.                      UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.                      Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}                       Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6  # noqa: E501

        :param uuid: The uuid of this TapiOamOamProfile.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def pm_threshold_data(self):
        """Gets the pm_threshold_data of this TapiOamOamProfile.

        none  # noqa: E501

        :return: The pm_threshold_data of this TapiOamOamProfile.
        :rtype: List[TapiOamPmThresholdData]
        """
        return self._pm_threshold_data

    @pm_threshold_data.setter
    def pm_threshold_data(self, pm_threshold_data):
        """Sets the pm_threshold_data of this TapiOamOamProfile.

        none  # noqa: E501

        :param pm_threshold_data: The pm_threshold_data of this TapiOamOamProfile.
        :type pm_threshold_data: List[TapiOamPmThresholdData]
        """

        self._pm_threshold_data = pm_threshold_data

    @property
    def pm_bin_data(self):
        """Gets the pm_bin_data of this TapiOamOamProfile.

        none  # noqa: E501

        :return: The pm_bin_data of this TapiOamOamProfile.
        :rtype: List[TapiOamPmBinData]
        """
        return self._pm_bin_data

    @pm_bin_data.setter
    def pm_bin_data(self, pm_bin_data):
        """Sets the pm_bin_data of this TapiOamOamProfile.

        none  # noqa: E501

        :param pm_bin_data: The pm_bin_data of this TapiOamOamProfile.
        :type pm_bin_data: List[TapiOamPmBinData]
        """

        self._pm_bin_data = pm_bin_data
