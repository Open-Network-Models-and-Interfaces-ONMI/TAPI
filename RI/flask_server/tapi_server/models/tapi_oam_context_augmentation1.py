# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_oam_oam_context import TapiOamOamContext  # noqa: F401,E501
from tapi_server import util


class TapiOamContextAugmentation1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, oam_context=None):  # noqa: E501
        """TapiOamContextAugmentation1 - a model defined in OpenAPI

        :param oam_context: The oam_context of this TapiOamContextAugmentation1.  # noqa: E501
        :type oam_context: TapiOamOamContext
        """
        self.openapi_types = {
            'oam_context': TapiOamOamContext
        }

        self.attribute_map = {
            'oam_context': 'oam-context'
        }

        self._oam_context = oam_context

    @classmethod
    def from_dict(cls, dikt) -> 'TapiOamContextAugmentation1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.oam.ContextAugmentation1 of this TapiOamContextAugmentation1.  # noqa: E501
        :rtype: TapiOamContextAugmentation1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def oam_context(self):
        """Gets the oam_context of this TapiOamContextAugmentation1.


        :return: The oam_context of this TapiOamContextAugmentation1.
        :rtype: TapiOamOamContext
        """
        return self._oam_context

    @oam_context.setter
    def oam_context(self, oam_context):
        """Sets the oam_context of this TapiOamContextAugmentation1.


        :param oam_context: The oam_context of this TapiOamContextAugmentation1.
        :type oam_context: TapiOamOamContext
        """

        self._oam_context = oam_context
