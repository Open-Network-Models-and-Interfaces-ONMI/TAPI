# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server import util


class TapiPathComputationPathRef(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, path_uuid=None):  # noqa: E501
        """TapiPathComputationPathRef - a model defined in OpenAPI

        :param path_uuid: The path_uuid of this TapiPathComputationPathRef.  # noqa: E501
        :type path_uuid: str
        """
        self.openapi_types = {
            'path_uuid': str
        }

        self.attribute_map = {
            'path_uuid': 'path-uuid'
        }

        self._path_uuid = path_uuid

    @classmethod
    def from_dict(cls, dikt) -> 'TapiPathComputationPathRef':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.path.computation.PathRef of this TapiPathComputationPathRef.  # noqa: E501
        :rtype: TapiPathComputationPathRef
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path_uuid(self):
        """Gets the path_uuid of this TapiPathComputationPathRef.

        none  # noqa: E501

        :return: The path_uuid of this TapiPathComputationPathRef.
        :rtype: str
        """
        return self._path_uuid

    @path_uuid.setter
    def path_uuid(self, path_uuid):
        """Sets the path_uuid of this TapiPathComputationPathRef.

        none  # noqa: E501

        :param path_uuid: The path_uuid of this TapiPathComputationPathRef.
        :type path_uuid: str
        """

        self._path_uuid = path_uuid
