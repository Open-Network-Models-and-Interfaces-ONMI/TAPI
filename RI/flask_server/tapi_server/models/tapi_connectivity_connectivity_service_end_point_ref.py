# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_connectivity_connectivity_service_ref import TapiConnectivityConnectivityServiceRef  # noqa: F401,E501
from tapi_server import util


class TapiConnectivityConnectivityServiceEndPointRef(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connectivity_service_uuid=None, connectivity_service_end_point_local_id=None):  # noqa: E501
        """TapiConnectivityConnectivityServiceEndPointRef - a model defined in OpenAPI

        :param connectivity_service_uuid: The connectivity_service_uuid of this TapiConnectivityConnectivityServiceEndPointRef.  # noqa: E501
        :type connectivity_service_uuid: str
        :param connectivity_service_end_point_local_id: The connectivity_service_end_point_local_id of this TapiConnectivityConnectivityServiceEndPointRef.  # noqa: E501
        :type connectivity_service_end_point_local_id: str
        """
        self.openapi_types = {
            'connectivity_service_uuid': str,
            'connectivity_service_end_point_local_id': str
        }

        self.attribute_map = {
            'connectivity_service_uuid': 'connectivity-service-uuid',
            'connectivity_service_end_point_local_id': 'connectivity-service-end-point-local-id'
        }

        self._connectivity_service_uuid = connectivity_service_uuid
        self._connectivity_service_end_point_local_id = connectivity_service_end_point_local_id

    @classmethod
    def from_dict(cls, dikt) -> 'TapiConnectivityConnectivityServiceEndPointRef':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.connectivity.ConnectivityServiceEndPointRef of this TapiConnectivityConnectivityServiceEndPointRef.  # noqa: E501
        :rtype: TapiConnectivityConnectivityServiceEndPointRef
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connectivity_service_uuid(self):
        """Gets the connectivity_service_uuid of this TapiConnectivityConnectivityServiceEndPointRef.

        none  # noqa: E501

        :return: The connectivity_service_uuid of this TapiConnectivityConnectivityServiceEndPointRef.
        :rtype: str
        """
        return self._connectivity_service_uuid

    @connectivity_service_uuid.setter
    def connectivity_service_uuid(self, connectivity_service_uuid):
        """Sets the connectivity_service_uuid of this TapiConnectivityConnectivityServiceEndPointRef.

        none  # noqa: E501

        :param connectivity_service_uuid: The connectivity_service_uuid of this TapiConnectivityConnectivityServiceEndPointRef.
        :type connectivity_service_uuid: str
        """

        self._connectivity_service_uuid = connectivity_service_uuid

    @property
    def connectivity_service_end_point_local_id(self):
        """Gets the connectivity_service_end_point_local_id of this TapiConnectivityConnectivityServiceEndPointRef.

        none  # noqa: E501

        :return: The connectivity_service_end_point_local_id of this TapiConnectivityConnectivityServiceEndPointRef.
        :rtype: str
        """
        return self._connectivity_service_end_point_local_id

    @connectivity_service_end_point_local_id.setter
    def connectivity_service_end_point_local_id(self, connectivity_service_end_point_local_id):
        """Sets the connectivity_service_end_point_local_id of this TapiConnectivityConnectivityServiceEndPointRef.

        none  # noqa: E501

        :param connectivity_service_end_point_local_id: The connectivity_service_end_point_local_id of this TapiConnectivityConnectivityServiceEndPointRef.
        :type connectivity_service_end_point_local_id: str
        """

        self._connectivity_service_end_point_local_id = connectivity_service_end_point_local_id
