# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server import util


class TapiNotificationObjectType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    TOPOLOGY = "TOPOLOGY"
    NODE = "NODE"
    LINK = "LINK"
    CONNECTION = "CONNECTION"
    PATH = "PATH"
    CONNECTIVITY_SERVICE = "CONNECTIVITY_SERVICE"
    VIRTUAL_NETWORK_SERVICE = "VIRTUAL_NETWORK_SERVICE"
    PATH_COMPUTATION_SERVICE = "PATH_COMPUTATION_SERVICE"
    NODE_EDGE_POINT = "NODE_EDGE_POINT"
    SERVICE_INTERFACE_POINT = "SERVICE_INTERFACE_POINT"
    CONNECTION_END_POINT = "CONNECTION_END_POINT"
    MAINTENANCE_ENTITY_GROUP = "MAINTENANCE_ENTITY_GROUP"
    MAINTENANCE_ENTITY = "MAINTENANCE_ENTITY"
    MEG_END_POINT = "MEG_END_POINT"
    MEG_INTERMEDIATE_POINT = "MEG_INTERMEDIATE_POINT"
    SWITCH_CONTROL = "SWITCH_CONTROL"
    SWITCH = "SWITCH"
    ROUTE = "ROUTE"
    NODE_RULE_GROUP = "NODE_RULE_GROUP"
    INTER_RULE_GROUP = "INTER_RULE_GROUP"
    RULE = "RULE"
    OAM_JOB = "OAM_JOB"

    def __init__(self):  # noqa: E501
        """TapiNotificationObjectType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'TapiNotificationObjectType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.notification.ObjectType of this TapiNotificationObjectType.  # noqa: E501
        :rtype: TapiNotificationObjectType
        """
        return util.deserialize_model(dikt, cls)
