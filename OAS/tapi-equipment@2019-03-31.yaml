---
swagger: "2.0"
info:
  description: "\r\n        This module contains TAPI Topology Model definitions.\r\
    \n        Source: TapiTopology.uml\r\n        Copyright (c) 2018 Open Networking\
    \ Foundation (ONF). All rights reserved.\r\n        License: This module is distributed\
    \ under the Apache License 2.0\r\n        - The TAPI YANG models included in this\
    \ TAPI release are a *normative* part of the TAPI SDK.\r\n        - The YANG specifications\
    \ have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG\
    \ mapping tool]\r\n        <https://github.com/OpenNetworkingFoundation/EagleUmlYang>\r\
    \n        and further edited manually to comply with the [ONF IISOMI UML2YANG\
    \ mapping guidelines]\r\n        <https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\r\
    \n        - Status of YANG model artifacts can be determined by referring to the\
    \ corresponding UML artifacts.\r\n        As described in the UML models, some\
    \ artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\r\
    \n        - The ONF TAPI release process does not guarantee backward compatibility\
    \ of YANG models across major versions of TAPI releases.\r\n        The YANG model\
    \ backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\r\
    \n        YANG models included in this release may not be backward compatible\
    \ with previous TAPI releases.,\r\n        - The TAPI YANG models included in\
    \ this TAPI release are a *normative* part of the TAPI SDK.\r\n        - The YANG\
    \ specifications have been generated from the corresponding UML model using the\
    \ [ONF EAGLE UML2YANG mapping tool]\r\n        <https://github.com/OpenNetworkingFoundation/EagleUmlYang>\r\
    \n        and further edited manually to comply with the [ONF IISOMI UML2YANG\
    \ mapping guidelines]\r\n        <https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\r\
    \n        - Status of YANG model artifacts can be determined by referring to the\
    \ corresponding UML artifacts.\r\n        As described in the UML models, some\
    \ artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\r\
    \n        - The ONF TAPI release process does not guarantee backward compatibility\
    \ of YANG models across major versions of TAPI releases.\r\n        The YANG model\
    \ backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\r\
    \n        YANG models included in this release may not be backward compatible\
    \ with previous TAPI releases.,\r\n        This module contains TAPI Notification\
    \ Model definitions.\r\n        Source: TapiNotification.uml\r\n        Copyright\
    \ (c) 2018 Open Networking Foundation (ONF). All rights reserved.\r\n        License:\
    \ This module is distributed under the Apache License 2.0\r\n        - The TAPI\
    \ YANG models included in this TAPI release are a *normative* part of the TAPI\
    \ SDK.\r\n        - The YANG specifications have been generated from the corresponding\
    \ UML model using the [ONF EAGLE UML2YANG mapping tool]\r\n        <https://github.com/OpenNetworkingFoundation/EagleUmlYang>\r\
    \n        and further edited manually to comply with the [ONF IISOMI UML2YANG\
    \ mapping guidelines]\r\n        <https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\r\
    \n        - Status of YANG model artifacts can be determined by referring to the\
    \ corresponding UML artifacts.\r\n        As described in the UML models, some\
    \ artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\r\
    \n        - The ONF TAPI release process does not guarantee backward compatibility\
    \ of YANG models across major versions of TAPI releases.\r\n        The YANG model\
    \ backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\r\
    \n        YANG models included in this release may not be backward compatible\
    \ with previous TAPI releases.,\r\n        This module contains TAPI Common Model\
    \ definitions.\r\n        Source: TapiCommon.uml\r\n        Copyright (c) 2018\
    \ Open Networking Foundation (ONF). All rights reserved.\r\n        License: This\
    \ module is distributed under the Apache License 2.0\r\n        - The TAPI YANG\
    \ models included in this TAPI release are a *normative* part of the TAPI SDK.\r\
    \n        - The YANG specifications have been generated from the corresponding\
    \ UML model using the [ONF EAGLE UML2YANG mapping tool]\r\n        <https://github.com/OpenNetworkingFoundation/EagleUmlYang>\r\
    \n        and further edited manually to comply with the [ONF IISOMI UML2YANG\
    \ mapping guidelines]\r\n        <https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\r\
    \n        - Status of YANG model artifacts can be determined by referring to the\
    \ corresponding UML artifacts.\r\n        As described in the UML models, some\
    \ artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\r\
    \n        - The ONF TAPI release process does not guarantee backward compatibility\
    \ of YANG models across major versions of TAPI releases.\r\n        The YANG model\
    \ backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\r\
    \n        YANG models included in this release may not be backward compatible\
    \ with previous TAPI releases."
  version: "2.1.3"
  title: "tapi-topology,tapi-equipment,tapi-notification,tapi-common API"
host: "localhost:1234"
consumes:
- "application/yang-data+json"
produces:
- "application/yang-data+json"
paths:
  /data/tapi-common:context/:
    get:
      tags:
      - "tapi-common"
      summary: "returns tapi.common.Context"
      description: "none"
      parameters: []
      responses:
        200:
          description: "tapi.common.Context"
          schema:
            $ref: "#/definitions/tapi.common.ContextWrapper"
        400:
          description: "Internal error"
    post:
      tags:
      - "tapi-common"
      summary: "creates tapi.common.Context"
      description: "none"
      parameters:
      - in: "body"
        name: "tapi.common.Context.body-param"
        description: "tapi.common.Context to be added to list"
        required: false
        schema:
          $ref: "#/definitions/tapi.common.ContextWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        409:
          description: "Object already exists"
    put:
      tags:
      - "tapi-common"
      summary: "creates or updates tapi.common.Context"
      description: "none"
      parameters:
      - in: "body"
        name: "tapi.common.Context.body-param"
        description: "tapi.common.Context to be added or updated"
        required: false
        schema:
          $ref: "#/definitions/tapi.common.ContextWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        204:
          description: "Object modified"
    delete:
      tags:
      - "tapi-common"
      summary: "removes tapi.common.Context"
      description: "none"
      parameters: []
      responses:
        400:
          description: "Internal error"
        204:
          description: "Object deleted"
  /data/tapi-common:context/name/:
    post:
      tags:
      - "tapi-common"
      summary: "creates tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - in: "body"
        name: "tapi.common.NameAndValue.body-param"
        description: "tapi.common.NameAndValue to be added to list"
        required: false
        schema:
          $ref: "#/definitions/tapi.common.NameAndValueWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        409:
          description: "Object already exists"
  /data/tapi-common:context/name={value-name}/:
    get:
      tags:
      - "tapi-common"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
    put:
      tags:
      - "tapi-common"
      summary: "creates or updates tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      - in: "body"
        name: "tapi.common.NameAndValue.body-param"
        description: "tapi.common.NameAndValue to be added or updated"
        required: false
        schema:
          $ref: "#/definitions/tapi.common.NameAndValueWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        204:
          description: "Object modified"
    delete:
      tags:
      - "tapi-common"
      summary: "removes tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        400:
          description: "Internal error"
        204:
          description: "Object deleted"
  /data/tapi-common:context/service-interface-point/:
    post:
      tags:
      - "tapi-common"
      summary: "creates tapi.common.ServiceInterfacePoint"
      description: "The ServiceInterfacePoint (SIP) instances belonging to this context."
      parameters:
      - in: "body"
        name: "tapi.common.ServiceInterfacePoint.body-param"
        description: "tapi.common.ServiceInterfacePoint to be added to list"
        required: false
        schema:
          $ref: "#/definitions/tapi.common.ServiceInterfacePointWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        409:
          description: "Object already exists"
  /data/tapi-common:context/service-interface-point={uuid}/:
    get:
      tags:
      - "tapi-common"
      summary: "returns tapi.common.ServiceInterfacePoint"
      description: "The ServiceInterfacePoint (SIP) instances belonging to this context."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of service-interface-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.ServiceInterfacePoint"
          schema:
            $ref: "#/definitions/tapi.common.ServiceInterfacePointWrapper"
        400:
          description: "Internal error"
    put:
      tags:
      - "tapi-common"
      summary: "creates or updates tapi.common.ServiceInterfacePoint"
      description: "The ServiceInterfacePoint (SIP) instances belonging to this context."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of service-interface-point"
        required: true
        type: "string"
      - in: "body"
        name: "tapi.common.ServiceInterfacePoint.body-param"
        description: "tapi.common.ServiceInterfacePoint to be added or updated"
        required: false
        schema:
          $ref: "#/definitions/tapi.common.ServiceInterfacePointWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        204:
          description: "Object modified"
    delete:
      tags:
      - "tapi-common"
      summary: "removes tapi.common.ServiceInterfacePoint"
      description: "The ServiceInterfacePoint (SIP) instances belonging to this context."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of service-interface-point"
        required: true
        type: "string"
      responses:
        400:
          description: "Internal error"
        204:
          description: "Object deleted"
  /data/tapi-common:context/service-interface-point={uuid}/available-capacity/:
    get:
      tags:
      - "tapi-common"
      summary: "returns tapi.common.Capacity"
      description: "Capacity available to be assigned."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of service-interface-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.Capacity"
          schema:
            $ref: "#/definitions/tapi.common.CapacityWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/service-interface-point={uuid}/available-capacity/total-size/:
    get:
      tags:
      - "tapi-common"
      summary: "returns tapi.common.CapacityValue"
      description: "Total capacity of the entity. In case of bandwidthProfile, this\
        \ is expected to be the same as the committedInformationRate."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of service-interface-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.CapacityValue"
          schema:
            $ref: "#/definitions/tapi.common.CapacityValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/service-interface-point={uuid}/name/:
    post:
      tags:
      - "tapi-common"
      summary: "creates tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of service-interface-point"
        required: true
        type: "string"
      - in: "body"
        name: "tapi.common.NameAndValue.body-param"
        description: "tapi.common.NameAndValue to be added to list"
        required: false
        schema:
          $ref: "#/definitions/tapi.common.NameAndValueWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        409:
          description: "Object already exists"
  /data/tapi-common:context/service-interface-point={uuid}/name={value-name}/:
    get:
      tags:
      - "tapi-common"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of service-interface-point"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
    put:
      tags:
      - "tapi-common"
      summary: "creates or updates tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of service-interface-point"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      - in: "body"
        name: "tapi.common.NameAndValue.body-param"
        description: "tapi.common.NameAndValue to be added or updated"
        required: false
        schema:
          $ref: "#/definitions/tapi.common.NameAndValueWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        204:
          description: "Object modified"
    delete:
      tags:
      - "tapi-common"
      summary: "removes tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of service-interface-point"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        400:
          description: "Internal error"
        204:
          description: "Object deleted"
  /data/tapi-common:context/service-interface-point={uuid}/total-potential-capacity/:
    get:
      tags:
      - "tapi-common"
      summary: "returns tapi.common.Capacity"
      description: "An optimistic view of the capacity of the entity assuming that\
        \ any shared capacity is available to be taken."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of service-interface-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.Capacity"
          schema:
            $ref: "#/definitions/tapi.common.CapacityWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/service-interface-point={uuid}/total-potential-capacity/total-size/:
    get:
      tags:
      - "tapi-common"
      summary: "returns tapi.common.CapacityValue"
      description: "Total capacity of the entity. In case of bandwidthProfile, this\
        \ is expected to be the same as the committedInformationRate."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of service-interface-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.CapacityValue"
          schema:
            $ref: "#/definitions/tapi.common.CapacityValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-equipment:physical-context/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.PhysicalContext"
      description: "none"
      parameters: []
      responses:
        200:
          description: "tapi.equipment.PhysicalContext"
          schema:
            $ref: "#/definitions/tapi.equipment.PhysicalContextWrapper"
        400:
          description: "Internal error"
    post:
      tags:
      - "tapi-equipment"
      summary: "creates tapi.equipment.PhysicalContext"
      description: "none"
      parameters:
      - in: "body"
        name: "tapi.equipment.PhysicalContext.body-param"
        description: "tapi.equipment.PhysicalContext to be added to list"
        required: false
        schema:
          $ref: "#/definitions/tapi.equipment.PhysicalContextWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        409:
          description: "Object already exists"
    put:
      tags:
      - "tapi-equipment"
      summary: "creates or updates tapi.equipment.PhysicalContext"
      description: "none"
      parameters:
      - in: "body"
        name: "tapi.equipment.PhysicalContext.body-param"
        description: "tapi.equipment.PhysicalContext to be added or updated"
        required: false
        schema:
          $ref: "#/definitions/tapi.equipment.PhysicalContextWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        204:
          description: "Object modified"
    delete:
      tags:
      - "tapi-equipment"
      summary: "removes tapi.equipment.PhysicalContext"
      description: "none"
      parameters: []
      responses:
        400:
          description: "Internal error"
        204:
          description: "Object deleted"
  /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.Device"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.Device"
          schema:
            $ref: "#/definitions/tapi.equipment.DeviceWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/access-port={access-port-uuid}/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.AccessPort"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "access-port-uuid"
        in: "path"
        description: "Id of access-port"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.AccessPort"
          schema:
            $ref: "#/definitions/tapi.equipment.AccessPortWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/access-port={access-port-uuid}/connector-pin={connector-identification},{pin-identification},{equipment-uuid}/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.ConnectorPinAddress"
      description: "The list of Pins that support the AccessPort."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "access-port-uuid"
        in: "path"
        description: "Id of access-port"
        required: true
        type: "string"
      - name: "connector-identification"
        in: "path"
        description: "Id of connector-pin"
        required: true
        type: "string"
      - name: "pin-identification"
        in: "path"
        description: "Id of connector-pin"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of connector-pin"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.ConnectorPinAddress"
          schema:
            $ref: "#/definitions/tapi.equipment.ConnectorPinAddressWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/access-port={access-port-uuid}/connector-pin={connector-identification},{pin-identification},{equipment-uuid}/pin-and-role/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.PinAndRole"
      description: "If there is more than one pin used in a connector and/or there\
        \ is a need to identify the role of one or more pins then this property can\
        \ be used.\r\n                For simple cases pinIdentification can be used\
        \ instead."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "access-port-uuid"
        in: "path"
        description: "Id of access-port"
        required: true
        type: "string"
      - name: "connector-identification"
        in: "path"
        description: "Id of connector-pin"
        required: true
        type: "string"
      - name: "pin-identification"
        in: "path"
        description: "Id of connector-pin"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of connector-pin"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.PinAndRole"
          schema:
            $ref: "#/definitions/tapi.equipment.PinAndRoleWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/access-port={access-port-uuid}/name={value-name}/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "access-port-uuid"
        in: "path"
        description: "Id of access-port"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.Equipment"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.Equipment"
          schema:
            $ref: "#/definitions/tapi.equipment.EquipmentWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/actual-equipment/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.ActualEquipment"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.ActualEquipment"
          schema:
            $ref: "#/definitions/tapi.equipment.ActualEquipmentWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/actual-equipment/actual-non-field-replaceable-module/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.ActualNonFieldReplaceableModule"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.ActualNonFieldReplaceableModule"
          schema:
            $ref: "#/definitions/tapi.equipment.ActualNonFieldReplaceableModuleWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/actual-equipment/actual-non-field-replaceable-module/common-actual-properties/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.CommonActualProperties"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.CommonActualProperties"
          schema:
            $ref: "#/definitions/tapi.equipment.CommonActualPropertiesWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/actual-equipment/actual-non-field-replaceable-module/common-equipment-properties/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.CommonEquipmentProperties"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.CommonEquipmentProperties"
          schema:
            $ref: "#/definitions/tapi.equipment.CommonEquipmentPropertiesWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/actual-equipment/common-actual-properties/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.CommonActualProperties"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.CommonActualProperties"
          schema:
            $ref: "#/definitions/tapi.equipment.CommonActualPropertiesWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/actual-equipment/common-equipment-properties/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.CommonEquipmentProperties"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.CommonEquipmentProperties"
          schema:
            $ref: "#/definitions/tapi.equipment.CommonEquipmentPropertiesWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/contained-holder={contained-holder-uuid}/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.Holder"
      description: "References the Holder in an Equipment that is available to take\
        \ other Equipments.\r\n                For example:\r\n                - Slot\
        \ in a sub-rack\r\n                - Slot in a Field Replaceable Unit that\
        \ can take a small form-factor pluggable."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      - name: "contained-holder-uuid"
        in: "path"
        description: "Id of contained-holder"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.Holder"
          schema:
            $ref: "#/definitions/tapi.equipment.HolderWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/contained-holder={contained-holder-uuid}/actual-holder/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.ActualHolder"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      - name: "contained-holder-uuid"
        in: "path"
        description: "Id of contained-holder"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.ActualHolder"
          schema:
            $ref: "#/definitions/tapi.equipment.ActualHolderWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/contained-holder={contained-holder-uuid}/actual-holder/common-holder-properties/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.CommonHolderProperties"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      - name: "contained-holder-uuid"
        in: "path"
        description: "Id of contained-holder"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.CommonHolderProperties"
          schema:
            $ref: "#/definitions/tapi.equipment.CommonHolderPropertiesWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/contained-holder={contained-holder-uuid}/expected-holder/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.ExpectedHolder"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      - name: "contained-holder-uuid"
        in: "path"
        description: "Id of contained-holder"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.ExpectedHolder"
          schema:
            $ref: "#/definitions/tapi.equipment.ExpectedHolderWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/contained-holder={contained-holder-uuid}/expected-holder/common-holder-properties/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.CommonHolderProperties"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      - name: "contained-holder-uuid"
        in: "path"
        description: "Id of contained-holder"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.CommonHolderProperties"
          schema:
            $ref: "#/definitions/tapi.equipment.CommonHolderPropertiesWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/contained-holder={contained-holder-uuid}/name={value-name}/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      - name: "contained-holder-uuid"
        in: "path"
        description: "Id of contained-holder"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/contained-holder={contained-holder-uuid}/occupying-fru/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.EquipmentRef"
      description: "The FRU that is occupying the holder. \r\n                A holder\
        \ may be unoccupied. \r\n                An FRU may occupy more hat one holder\
        \ (using or blocking are intentionally not distinguished here)."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      - name: "contained-holder-uuid"
        in: "path"
        description: "Id of contained-holder"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.EquipmentRef"
          schema:
            $ref: "#/definitions/tapi.equipment.EquipmentRefWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/expected-equipment/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.ExpectedEquipment"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.ExpectedEquipment"
          schema:
            $ref: "#/definitions/tapi.equipment.ExpectedEquipmentWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/expected-equipment/common-equipment-properties/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.CommonEquipmentProperties"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.CommonEquipmentProperties"
          schema:
            $ref: "#/definitions/tapi.equipment.CommonEquipmentPropertiesWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/expected-equipment/expected-holder/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.ExpectedHolder"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.ExpectedHolder"
          schema:
            $ref: "#/definitions/tapi.equipment.ExpectedHolderWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/expected-equipment/expected-holder/common-holder-properties/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.CommonHolderProperties"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.CommonHolderProperties"
          schema:
            $ref: "#/definitions/tapi.equipment.CommonHolderPropertiesWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/expected-equipment/expected-non-field-replaceable-module/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.ExpectedNonFieldReplaceableModule"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.ExpectedNonFieldReplaceableModule"
          schema:
            $ref: "#/definitions/tapi.equipment.ExpectedNonFieldReplaceableModuleWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/expected-equipment/expected-non-field-replaceable-module/common-equipment-properties/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.CommonEquipmentProperties"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.CommonEquipmentProperties"
          schema:
            $ref: "#/definitions/tapi.equipment.CommonEquipmentPropertiesWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/equipment={equipment-uuid}/name={value-name}/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of equipment"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-equipment:physical-context/device={uuid}/name={value-name}/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of device"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-equipment:physical-context/physical-span={uuid}/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.PhysicalSpan"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of physical-span"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.PhysicalSpan"
          schema:
            $ref: "#/definitions/tapi.equipment.PhysicalSpanWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-equipment:physical-context/physical-span={uuid}/abstract-strand={local-id}/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.AbstractStrand"
      description: "Both the serial segments that form an end-end strand and the parallel\
        \ end-end strands."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of physical-span"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of abstract-strand"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.AbstractStrand"
          schema:
            $ref: "#/definitions/tapi.equipment.AbstractStrandWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/physical-span={uuid}/abstract-strand={local-id}/adjacent-strand={physical-span-uuid},{abstract-strand-local-id}/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.AbstractStrandRef"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of physical-span"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of abstract-strand"
        required: true
        type: "string"
      - name: "physical-span-uuid"
        in: "path"
        description: "Id of adjacent-strand"
        required: true
        type: "string"
      - name: "abstract-strand-local-id"
        in: "path"
        description: "Id of adjacent-strand"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.AbstractStrandRef"
          schema:
            $ref: "#/definitions/tapi.equipment.AbstractStrandRefWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/physical-span={uuid}/abstract-strand={local-id}/connector-pin={connector-identification},{pin-identification},{equipment-uuid}/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.ConnectorPinAddress"
      description: "A strand can end on two or more Pins (usually 2 pins, but a strand\
        \ my be spliced to split a signal). This model supports only 2 ended strands.\r\
        \n                A abstract strand may be spliced at both ends and hence\
        \ have no direct relationship to pins or may be connected to pins at one or\
        \ both ends.\r\n                In the essential model these Pins would be\
        \ on connectors that plug in to connectors on Equipments.\r\n            \
        \    The AbstractStrand is extended to the pins of the AccessPort which are\
        \ the Pins on the Connectors of the Equipment.\r\n                In some\
        \ cases it may not be relevant to represent the pin detail and hence the reference\
        \ is to a connector alone."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of physical-span"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of abstract-strand"
        required: true
        type: "string"
      - name: "connector-identification"
        in: "path"
        description: "Id of connector-pin"
        required: true
        type: "string"
      - name: "pin-identification"
        in: "path"
        description: "Id of connector-pin"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of connector-pin"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.ConnectorPinAddress"
          schema:
            $ref: "#/definitions/tapi.equipment.ConnectorPinAddressWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/physical-span={uuid}/abstract-strand={local-id}/connector-pin={connector-identification},{pin-identification},{equipment-uuid}/pin-and-role/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.PinAndRole"
      description: "If there is more than one pin used in a connector and/or there\
        \ is a need to identify the role of one or more pins then this property can\
        \ be used.\r\n                For simple cases pinIdentification can be used\
        \ instead."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of physical-span"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of abstract-strand"
        required: true
        type: "string"
      - name: "connector-identification"
        in: "path"
        description: "Id of connector-pin"
        required: true
        type: "string"
      - name: "pin-identification"
        in: "path"
        description: "Id of connector-pin"
        required: true
        type: "string"
      - name: "equipment-uuid"
        in: "path"
        description: "Id of connector-pin"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.PinAndRole"
          schema:
            $ref: "#/definitions/tapi.equipment.PinAndRoleWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-equipment:physical-context/physical-span={uuid}/abstract-strand={local-id}/name={value-name}/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of physical-span"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of abstract-strand"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/physical-span={uuid}/abstract-strand={local-id}/spliced-strand={physical-span-uuid},{abstract-strand-local-id}/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.AbstractStrandRef"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of physical-span"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of abstract-strand"
        required: true
        type: "string"
      - name: "physical-span-uuid"
        in: "path"
        description: "Id of spliced-strand"
        required: true
        type: "string"
      - name: "abstract-strand-local-id"
        in: "path"
        description: "Id of spliced-strand"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.AbstractStrandRef"
          schema:
            $ref: "#/definitions/tapi.equipment.AbstractStrandRefWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-equipment:physical-context/physical-span={uuid}/abstract-strand={local-id}/strand-media-characteristics={value-name}/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.common.NameAndValue"
      description: "Relevant physical properties of the abstract strand."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of physical-span"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of abstract-strand"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of strand-media-characteristics"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-equipment:physical-context/physical-span={uuid}/access-port={device-uuid},{access-port-uuid}/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.AccessPortRef"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of physical-span"
        required: true
        type: "string"
      - name: "device-uuid"
        in: "path"
        description: "Id of access-port"
        required: true
        type: "string"
      - name: "access-port-uuid"
        in: "path"
        description: "Id of access-port"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.AccessPortRef"
          schema:
            $ref: "#/definitions/tapi.equipment.AccessPortRefWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-equipment:physical-context/physical-span={uuid}/name={value-name}/:
    get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of physical-span"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-notification:notification-context/:
    get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.notification.NotificationContext"
      description: "Augments the base TAPI Context with NotificationService information"
      parameters: []
      responses:
        200:
          description: "tapi.notification.NotificationContext"
          schema:
            $ref: "#/definitions/tapi.notification.NotificationContextWrapper"
        400:
          description: "Internal error"
    post:
      tags:
      - "tapi-notification"
      summary: "creates tapi.notification.NotificationContext"
      description: "Augments the base TAPI Context with NotificationService information"
      parameters:
      - in: "body"
        name: "tapi.notification.NotificationContext.body-param"
        description: "tapi.notification.NotificationContext to be added to list"
        required: false
        schema:
          $ref: "#/definitions/tapi.notification.NotificationContextWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        409:
          description: "Object already exists"
    put:
      tags:
      - "tapi-notification"
      summary: "creates or updates tapi.notification.NotificationContext"
      description: "Augments the base TAPI Context with NotificationService information"
      parameters:
      - in: "body"
        name: "tapi.notification.NotificationContext.body-param"
        description: "tapi.notification.NotificationContext to be added or updated"
        required: false
        schema:
          $ref: "#/definitions/tapi.notification.NotificationContextWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        204:
          description: "Object modified"
    delete:
      tags:
      - "tapi-notification"
      summary: "removes tapi.notification.NotificationContext"
      description: "Augments the base TAPI Context with NotificationService information"
      parameters: []
      responses:
        400:
          description: "Internal error"
        204:
          description: "Object deleted"
  /data/tapi-common:context/tapi-notification:notification-context/notif-subscription/:
    post:
      tags:
      - "tapi-notification"
      summary: "creates tapi.notification.NotificationSubscriptionService"
      description: "The included NotificationSubscriptionService instances."
      parameters:
      - in: "body"
        name: "tapi.notification.NotificationSubscriptionService.body-param"
        description: "tapi.notification.NotificationSubscriptionService to be added\
          \ to list"
        required: false
        schema:
          $ref: "#/definitions/tapi.notification.NotificationSubscriptionServiceWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        409:
          description: "Object already exists"
  /data/tapi-common:context/tapi-notification:notification-context/notif-subscription={uuid}/:
    get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.notification.NotificationSubscriptionService"
      description: "The included NotificationSubscriptionService instances."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.notification.NotificationSubscriptionService"
          schema:
            $ref: "#/definitions/tapi.notification.NotificationSubscriptionServiceWrapper"
        400:
          description: "Internal error"
    put:
      tags:
      - "tapi-notification"
      summary: "creates or updates tapi.notification.NotificationSubscriptionService"
      description: "The included NotificationSubscriptionService instances."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - in: "body"
        name: "tapi.notification.NotificationSubscriptionService.body-param"
        description: "tapi.notification.NotificationSubscriptionService to be added\
          \ or updated"
        required: false
        schema:
          $ref: "#/definitions/tapi.notification.NotificationSubscriptionServiceWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        204:
          description: "Object modified"
    delete:
      tags:
      - "tapi-notification"
      summary: "removes tapi.notification.NotificationSubscriptionService"
      description: "The included NotificationSubscriptionService instances."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      responses:
        400:
          description: "Internal error"
        204:
          description: "Object deleted"
  /data/tapi-common:context/tapi-notification:notification-context/notif-subscription={uuid}/name/:
    post:
      tags:
      - "tapi-notification"
      summary: "creates tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - in: "body"
        name: "tapi.common.NameAndValue.body-param"
        description: "tapi.common.NameAndValue to be added to list"
        required: false
        schema:
          $ref: "#/definitions/tapi.common.NameAndValueWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        409:
          description: "Object already exists"
  /data/tapi-common:context/tapi-notification:notification-context/notif-subscription={uuid}/name={value-name}/:
    get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
    put:
      tags:
      - "tapi-notification"
      summary: "creates or updates tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      - in: "body"
        name: "tapi.common.NameAndValue.body-param"
        description: "tapi.common.NameAndValue to be added or updated"
        required: false
        schema:
          $ref: "#/definitions/tapi.common.NameAndValueWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        204:
          description: "Object modified"
    delete:
      tags:
      - "tapi-notification"
      summary: "removes tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        400:
          description: "Internal error"
        204:
          description: "Object deleted"
  /data/tapi-common:context/tapi-notification:notification-context/notif-subscription={uuid}/notification-channel/:
    get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.notification.NotificationChannel"
      description: "The NotificationChannel instance of this NotificationSubscriptionService\
        \ instance."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.notification.NotificationChannel"
          schema:
            $ref: "#/definitions/tapi.notification.NotificationChannelWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-notification:notification-context/notif-subscription={uuid}/notification-channel/name={value-name}/
  : get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-notification:notification-context/notif-subscription={uuid}/notification={notification-uuid}/:
    get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.notification.Notification"
      description: "The Notification instances associated to this NotificationSubscriptionService\
        \ instance."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - name: "notification-uuid"
        in: "path"
        description: "Id of notification"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.notification.Notification"
          schema:
            $ref: "#/definitions/tapi.notification.NotificationWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-notification:notification-context/notif-subscription={uuid}/notification={notification-uuid}/additional-info={value-name}/
  : get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.common.NameAndValue"
      description: "Name and value list available for unspecified content."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - name: "notification-uuid"
        in: "path"
        description: "Id of notification"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of additional-info"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-notification:notification-context/notif-subscription={uuid}/notification={notification-uuid}/changed-attributes={value-name}/
  : get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.notification.NameAndValueChange"
      description: "The list of relevant changed attributes and their values."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - name: "notification-uuid"
        in: "path"
        description: "Id of notification"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of changed-attributes"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.notification.NameAndValueChange"
          schema:
            $ref: "#/definitions/tapi.notification.NameAndValueChangeWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-notification:notification-context/notif-subscription={uuid}/notification={notification-uuid}/name={value-name}/
  : get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - name: "notification-uuid"
        in: "path"
        description: "Id of notification"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-notification:notification-context/notif-subscription={uuid}/notification={notification-uuid}/target-object-name={value-name}/
  : get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.common.NameAndValue"
      description: "The Notification instance is related to the object instance with\
        \ this list of names."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - name: "notification-uuid"
        in: "path"
        description: "Id of notification"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of target-object-name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-notification:notification-context/notif-subscription={uuid}/subscription-filter/:
    get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.notification.SubscriptionFilter"
      description: "The SubscriptionFilter instance of this NotificationSubscriptionService\
        \ instance."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.notification.SubscriptionFilter"
          schema:
            $ref: "#/definitions/tapi.notification.SubscriptionFilterWrapper"
        400:
          description: "Internal error"
    post:
      tags:
      - "tapi-notification"
      summary: "creates tapi.notification.SubscriptionFilter"
      description: "The SubscriptionFilter instance of this NotificationSubscriptionService\
        \ instance."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - in: "body"
        name: "tapi.notification.SubscriptionFilter.body-param"
        description: "tapi.notification.SubscriptionFilter to be added to list"
        required: false
        schema:
          $ref: "#/definitions/tapi.notification.SubscriptionFilterWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        409:
          description: "Object already exists"
    put:
      tags:
      - "tapi-notification"
      summary: "creates or updates tapi.notification.SubscriptionFilter"
      description: "The SubscriptionFilter instance of this NotificationSubscriptionService\
        \ instance."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - in: "body"
        name: "tapi.notification.SubscriptionFilter.body-param"
        description: "tapi.notification.SubscriptionFilter to be added or updated"
        required: false
        schema:
          $ref: "#/definitions/tapi.notification.SubscriptionFilterWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        204:
          description: "Object modified"
    delete:
      tags:
      - "tapi-notification"
      summary: "removes tapi.notification.SubscriptionFilter"
      description: "The SubscriptionFilter instance of this NotificationSubscriptionService\
        \ instance."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      responses:
        400:
          description: "Internal error"
        204:
          description: "Object deleted"
  /data/tapi-common:context/tapi-notification:notification-context/notif-subscription={uuid}/subscription-filter/name/:
    post:
      tags:
      - "tapi-notification"
      summary: "creates tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - in: "body"
        name: "tapi.common.NameAndValue.body-param"
        description: "tapi.common.NameAndValue to be added to list"
        required: false
        schema:
          $ref: "#/definitions/tapi.common.NameAndValueWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        409:
          description: "Object already exists"
  ? /data/tapi-common:context/tapi-notification:notification-context/notif-subscription={uuid}/subscription-filter/name={value-name}/
  : get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
    put:
      tags:
      - "tapi-notification"
      summary: "creates or updates tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      - in: "body"
        name: "tapi.common.NameAndValue.body-param"
        description: "tapi.common.NameAndValue to be added or updated"
        required: false
        schema:
          $ref: "#/definitions/tapi.common.NameAndValueWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        204:
          description: "Object modified"
    delete:
      tags:
      - "tapi-notification"
      summary: "removes tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notif-subscription"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        400:
          description: "Internal error"
        204:
          description: "Object deleted"
  /data/tapi-common:context/tapi-notification:notification-context/notification={uuid}/:
    get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.notification.Notification"
      description: "The included Notification instances."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notification"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.notification.Notification"
          schema:
            $ref: "#/definitions/tapi.notification.NotificationWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-notification:notification-context/notification={uuid}/additional-info={value-name}/:
    get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.common.NameAndValue"
      description: "Name and value list available for unspecified content."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notification"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of additional-info"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-notification:notification-context/notification={uuid}/changed-attributes={value-name}/:
    get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.notification.NameAndValueChange"
      description: "The list of relevant changed attributes and their values."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notification"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of changed-attributes"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.notification.NameAndValueChange"
          schema:
            $ref: "#/definitions/tapi.notification.NameAndValueChangeWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-notification:notification-context/notification={uuid}/name={value-name}/:
    get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notification"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-notification:notification-context/notification={uuid}/target-object-name={value-name}/:
    get:
      tags:
      - "tapi-notification"
      summary: "returns tapi.common.NameAndValue"
      description: "The Notification instance is related to the object instance with\
        \ this list of names."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of notification"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of target-object-name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.context.TopologyContext"
      description: "Augments the base TAPI Context with TopologyService information"
      parameters: []
      responses:
        200:
          description: "tapi.topology.TopologyContext"
          schema:
            $ref: "#/definitions/tapi.topology.TopologyContextWrapper"
        400:
          description: "Internal error"
    post:
      tags:
      - "tapi-topology"
      summary: "creates tapi.topology.context.TopologyContext"
      description: "Augments the base TAPI Context with TopologyService information"
      parameters:
      - in: "body"
        name: "tapi.topology.context.TopologyContext.body-param"
        description: "tapi.topology.TopologyContext to be added to list"
        required: false
        schema:
          $ref: "#/definitions/tapi.topology.TopologyContextWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        409:
          description: "Object already exists"
    put:
      tags:
      - "tapi-topology"
      summary: "creates or updates tapi.topology.context.TopologyContext"
      description: "Augments the base TAPI Context with TopologyService information"
      parameters:
      - in: "body"
        name: "tapi.topology.context.TopologyContext.body-param"
        description: "tapi.topology.TopologyContext to be added or updated"
        required: false
        schema:
          $ref: "#/definitions/tapi.topology.TopologyContextWrapper"
      responses:
        201:
          description: "Object created"
        400:
          description: "Internal error"
        204:
          description: "Object modified"
    delete:
      tags:
      - "tapi-topology"
      summary: "removes tapi.topology.context.TopologyContext"
      description: "Augments the base TAPI Context with TopologyService information"
      parameters: []
      responses:
        400:
          description: "Internal error"
        204:
          description: "Object deleted"
  /data/tapi-common:context/tapi-topology:topology-context/nw-topology-service/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.NetworkTopologyService"
      description: "The defined operations."
      parameters: []
      responses:
        200:
          description: "tapi.topology.NetworkTopologyService"
          schema:
            $ref: "#/definitions/tapi.topology.NetworkTopologyServiceWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/nw-topology-service/name={value-name}/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/nw-topology-service/topology={topology-uuid}/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.TopologyRef"
      description: "The Topology instance(s) tracking the state of the allocated resources\
        \ for the support of the NetworkTopologyService."
      parameters:
      - name: "topology-uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.TopologyRef"
          schema:
            $ref: "#/definitions/tapi.topology.TopologyRefWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.topologycontext.Topology"
      description: "The included Topology instances."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.topologycontext.Topology"
          schema:
            $ref: "#/definitions/tapi.topology.topologycontext.TopologyWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/boundary-node-edge-point={topology-uuid},{node-uuid},{node-edge-point-uuid}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.NodeEdgePointRef"
      description: "This list is applicable only in case of a 'top' Topology (i.e.\
        \ a Topology which is not encapsulated in a Node) which does not encompass\
        \ a single Node.\r\n                In this case, the list identifies the\
        \ NEPs which are at the boundary of the Topology, which can be a subset of\
        \ all the NEPs belonging to encompassed Nodes.\r\n                It is expected\
        \ that these boundary NEPs have an associated SIP to allow the provisioning\
        \ of ConnectivityServices spanning the whole Topology."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "topology-uuid"
        in: "path"
        description: "Id of boundary-node-edge-point"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of boundary-node-edge-point"
        required: true
        type: "string"
      - name: "node-edge-point-uuid"
        in: "path"
        description: "Id of boundary-node-edge-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.NodeEdgePointRef"
          schema:
            $ref: "#/definitions/tapi.topology.NodeEdgePointRefWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.topology.Link"
      description: "The list of Links which the Topology encompass."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.topology.Link"
          schema:
            $ref: "#/definitions/tapi.topology.topology.LinkWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/available-capacity/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.Capacity"
      description: "Capacity available to be assigned."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.Capacity"
          schema:
            $ref: "#/definitions/tapi.common.CapacityWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/available-capacity/total-size/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.CapacityValue"
      description: "Total capacity of the entity. In case of bandwidthProfile, this\
        \ is expected to be the same as the committedInformationRate."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.CapacityValue"
          schema:
            $ref: "#/definitions/tapi.common.CapacityValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/cost-characteristic={cost-name}/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.CostCharacteristic"
      description: "The list of costs where each cost relates to some aspect of the\
        \ topological entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      - name: "cost-name"
        in: "path"
        description: "Id of cost-characteristic"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.CostCharacteristic"
          schema:
            $ref: "#/definitions/tapi.topology.CostCharacteristicWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/latency-characteristic={traffic-property-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.LatencyCharacteristic"
      description: "The effect on the latency of a queuing process. This only has\
        \ significant effect for packet based systems and has a complex characteristic."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      - name: "traffic-property-name"
        in: "path"
        description: "Id of latency-characteristic"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.LatencyCharacteristic"
          schema:
            $ref: "#/definitions/tapi.topology.LatencyCharacteristicWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/name={value-name}/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/node-edge-point={topology-uuid},{node-uuid},{node-edge-point-uuid}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.NodeEdgePointRef"
      description: "The NEPs connected by the Link."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      - name: "topology-uuid"
        in: "path"
        description: "Id of node-edge-point"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node-edge-point"
        required: true
        type: "string"
      - name: "node-edge-point-uuid"
        in: "path"
        description: "Id of node-edge-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.NodeEdgePointRef"
          schema:
            $ref: "#/definitions/tapi.topology.NodeEdgePointRefWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/resilience-type/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.ResilienceType"
      description: "The underlying resilience type of the Link."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.ResilienceType"
          schema:
            $ref: "#/definitions/tapi.topology.ResilienceTypeWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/risk-characteristic={risk-characteristic-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.RiskCharacteristic"
      description: "A list of risk characteristics for consideration in an analysis\
        \ of shared risk. Each element of the list represents a specific risk consideration."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      - name: "risk-characteristic-name"
        in: "path"
        description: "Id of risk-characteristic"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.RiskCharacteristic"
          schema:
            $ref: "#/definitions/tapi.topology.RiskCharacteristicWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/tapi-equipment:supporting-physical-span/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.SupportingPhysicalSpan"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.SupportingPhysicalSpan"
          schema:
            $ref: "#/definitions/tapi.equipment.SupportingPhysicalSpanWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/tapi-equipment:supporting-physical-span/physical-span/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.PhysicalSpanRef"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.PhysicalSpanRef"
          schema:
            $ref: "#/definitions/tapi.equipment.PhysicalSpanRefWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/total-potential-capacity/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.Capacity"
      description: "An optimistic view of the capacity of the entity assuming that\
        \ any shared capacity is available to be taken."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.Capacity"
          schema:
            $ref: "#/definitions/tapi.common.CapacityWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/total-potential-capacity/total-size/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.CapacityValue"
      description: "Total capacity of the entity. In case of bandwidthProfile, this\
        \ is expected to be the same as the committedInformationRate."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.CapacityValue"
          schema:
            $ref: "#/definitions/tapi.common.CapacityValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/link={link-uuid}/validation-mechanism={validation-mechanism}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.ValidationMechanism"
      description: "Provides details of the specific validation mechanism(s) used\
        \ to confirm the presence of an intended topological entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "link-uuid"
        in: "path"
        description: "Id of link"
        required: true
        type: "string"
      - name: "validation-mechanism"
        in: "path"
        description: "Id of validation-mechanism"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.ValidationMechanism"
          schema:
            $ref: "#/definitions/tapi.topology.ValidationMechanismWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/name={value-name}/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.topology.Node"
      description: "The list of Nodes which the Topology encompass."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.topology.Node"
          schema:
            $ref: "#/definitions/tapi.topology.topology.NodeWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/aggregated-node-edge-point={topology-uuid},{aggregated-node-edge-point-node-uuid},{node-edge-point-uuid}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.NodeEdgePointRef"
      description: "The NEPs aggregated by this Node.\r\n                By convention,\
        \ only the Node instances which are not at the lowest partitioning level 'aggregate'\
        \ the NEPs.\r\n                In other words, each and every NEP instance\
        \ is owned by a Node at the lowest partitioning level. A subset of NEP instances\
        \ may be aggregated by Nodes at higher partitioning levels."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "topology-uuid"
        in: "path"
        description: "Id of aggregated-node-edge-point"
        required: true
        type: "string"
      - name: "aggregated-node-edge-point-node-uuid"
        in: "path"
        description: "Id of aggregated-node-edge-point"
        required: true
        type: "string"
      - name: "node-edge-point-uuid"
        in: "path"
        description: "Id of aggregated-node-edge-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.NodeEdgePointRef"
          schema:
            $ref: "#/definitions/tapi.topology.NodeEdgePointRefWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/available-capacity/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.Capacity"
      description: "Capacity available to be assigned."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.Capacity"
          schema:
            $ref: "#/definitions/tapi.common.CapacityWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/available-capacity/total-size/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.CapacityValue"
      description: "Total capacity of the entity. In case of bandwidthProfile, this\
        \ is expected to be the same as the committedInformationRate."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.CapacityValue"
          schema:
            $ref: "#/definitions/tapi.common.CapacityValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/cost-characteristic={cost-name}/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.CostCharacteristic"
      description: "The list of costs where each cost relates to some aspect of the\
        \ topological entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "cost-name"
        in: "path"
        description: "Id of cost-characteristic"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.CostCharacteristic"
          schema:
            $ref: "#/definitions/tapi.topology.CostCharacteristicWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/encap-topology/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.TopologyRef"
      description: "A Node may encapsulate one Topology instance, which in turn encompasses\
        \ Nodes at lower partitioning level."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.TopologyRef"
          schema:
            $ref: "#/definitions/tapi.topology.TopologyRefWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/latency-characteristic={traffic-property-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.LatencyCharacteristic"
      description: "The effect on the latency of a queuing process. This only has\
        \ significant effect for packet based systems and has a complex characteristic."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "traffic-property-name"
        in: "path"
        description: "Id of latency-characteristic"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.LatencyCharacteristic"
          schema:
            $ref: "#/definitions/tapi.topology.LatencyCharacteristicWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/name={value-name}/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.NodeRuleGroup"
      description: "The Node rules applicable to this Node."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.NodeRuleGroup"
          schema:
            $ref: "#/definitions/tapi.topology.NodeRuleGroupWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.Capacity"
      description: "Capacity available to be assigned."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.Capacity"
          schema:
            $ref: "#/definitions/tapi.common.CapacityWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/total-size/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.CapacityValue"
      description: "Total capacity of the entity. In case of bandwidthProfile, this\
        \ is expected to be the same as the committedInformationRate."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.CapacityValue"
          schema:
            $ref: "#/definitions/tapi.common.CapacityValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group={topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.NodeRuleGroupRef"
      description: "NodeRuleGroups may be nested such that finer grained rules may\
        \ be applied.\r\n                A nested rule group should have a subset\
        \ of the NEPs of the superior rule group."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "topology-uuid"
        in: "path"
        description: "Id of composed-rule-group"
        required: true
        type: "string"
      - name: "composed-rule-group-node-uuid"
        in: "path"
        description: "Id of composed-rule-group"
        required: true
        type: "string"
      - name: "composed-rule-group-node-rule-group-uuid"
        in: "path"
        description: "Id of composed-rule-group"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.NodeRuleGroupRef"
          schema:
            $ref: "#/definitions/tapi.topology.NodeRuleGroupRefWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.CostCharacteristic"
      description: "The list of costs where each cost relates to some aspect of the\
        \ topological entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "cost-name"
        in: "path"
        description: "Id of cost-characteristic"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.CostCharacteristic"
          schema:
            $ref: "#/definitions/tapi.topology.CostCharacteristicWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.InterRuleGroup"
      description: "Nested NodeRuleGroups may have InterRuleGroups. The Superior NodeRuleGroup\
        \ contains the nested NodeRuleGroups and their associated InterRuleGroups.\r\
        \n                This is equivalent to the Node-Topology hierarchy."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.InterRuleGroup"
          schema:
            $ref: "#/definitions/tapi.topology.InterRuleGroupWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.NodeRuleGroupRef"
      description: "The NodeRuleGroups that the InterRuleGroup constrains interconnection\
        \ between.\r\n                The CEPs of the NEPs of a referenced NodeRuleGroup\
        \ can interconnect to the CEPs of the NEPs of another referenced NodeRuleGroup\
        \ constrained by the rules of the InterRuleGroup."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      - name: "topology-uuid"
        in: "path"
        description: "Id of associated-node-rule-group"
        required: true
        type: "string"
      - name: "associated-node-rule-group-node-uuid"
        in: "path"
        description: "Id of associated-node-rule-group"
        required: true
        type: "string"
      - name: "associated-node-rule-group-node-rule-group-uuid"
        in: "path"
        description: "Id of associated-node-rule-group"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.NodeRuleGroupRef"
          schema:
            $ref: "#/definitions/tapi.topology.NodeRuleGroupRefWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.Capacity"
      description: "Capacity available to be assigned."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.Capacity"
          schema:
            $ref: "#/definitions/tapi.common.CapacityWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.CapacityValue"
      description: "Total capacity of the entity. In case of bandwidthProfile, this\
        \ is expected to be the same as the committedInformationRate."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.CapacityValue"
          schema:
            $ref: "#/definitions/tapi.common.CapacityValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.CostCharacteristic"
      description: "The list of costs where each cost relates to some aspect of the\
        \ topological entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      - name: "cost-name"
        in: "path"
        description: "Id of cost-characteristic"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.CostCharacteristic"
          schema:
            $ref: "#/definitions/tapi.topology.CostCharacteristicWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={traffic-property-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.LatencyCharacteristic"
      description: "The effect on the latency of a queuing process. This only has\
        \ significant effect for packet based systems and has a complex characteristic."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      - name: "traffic-property-name"
        in: "path"
        description: "Id of latency-characteristic"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.LatencyCharacteristic"
          schema:
            $ref: "#/definitions/tapi.topology.LatencyCharacteristicWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name={value-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic={risk-characteristic-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.RiskCharacteristic"
      description: "A list of risk characteristics for consideration in an analysis\
        \ of shared risk. Each element of the list represents a specific risk consideration."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      - name: "risk-characteristic-name"
        in: "path"
        description: "Id of risk-characteristic"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.RiskCharacteristic"
          schema:
            $ref: "#/definitions/tapi.topology.RiskCharacteristicWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={local-id}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.Rule"
      description: "The list of rules of the InterRuleGroup."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of rule"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.Rule"
          schema:
            $ref: "#/definitions/tapi.topology.RuleWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={local-id}/cep-port-role/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.PortRoleRule"
      description: "Indicates the port role to which the rule applies. \r\n      \
        \          The port role is interpreted in the context of the connection type\
        \ which is identified by the connection spec, if any.\r\n                The\
        \ port role is not meaningful in the absence of a connection spec reference.\r\
        \n                If a NodeRuleGroup carries a port role, that role applies\
        \ also to the associated InterRuleGroup where the combination of the roles\
        \ in the NodeRuleGroups at the ends of the InterGroupRule define the Connection\
        \ orientation.\r\n                For example a root-and-leaf Connection may\
        \ be used in a Node where a NodeRuleGroup collects one set of NEPs has the\
        \ port role 'root' and another NodeRuleGroup collects another set of NEPs\
        \ has the port role 'leaf' where these are joined by an InterRuleGroup.\r\n\
        \                This combination specifies an allowed orientation of the\
        \ root-and-leaf Connection.\r\n                No port role statement means\
        \ all port roles are allowed."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of rule"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.PortRoleRule"
          schema:
            $ref: "#/definitions/tapi.topology.PortRoleRuleWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={local-id}/connection-spec-reference/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.ConnectionSpecReference"
      description: "Identifies the type of Connection that the rule applies to. \r\
        \n                If the attribute is not present then the rule applies to\
        \ all types of Connection supported by the device."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of rule"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.ConnectionSpecReference"
          schema:
            $ref: "#/definitions/tapi.topology.ConnectionSpecReferenceWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={local-id}/name={value-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of rule"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={local-id}/signal-property/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.SignalPropertyRule"
      description: "The rule only applies to signals with the properties listed. \r\
        \n                If the attribute is not present then the rule applies to\
        \ all signals."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of rule"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.SignalPropertyRule"
          schema:
            $ref: "#/definitions/tapi.topology.SignalPropertyRuleWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.Capacity"
      description: "An optimistic view of the capacity of the entity assuming that\
        \ any shared capacity is available to be taken."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.Capacity"
          schema:
            $ref: "#/definitions/tapi.common.CapacityWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.CapacityValue"
      description: "Total capacity of the entity. In case of bandwidthProfile, this\
        \ is expected to be the same as the committedInformationRate."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "inter-rule-group-uuid"
        in: "path"
        description: "Id of inter-rule-group"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.CapacityValue"
          schema:
            $ref: "#/definitions/tapi.common.CapacityValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={traffic-property-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.LatencyCharacteristic"
      description: "The effect on the latency of a queuing process. This only has\
        \ significant effect for packet based systems and has a complex characteristic."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "traffic-property-name"
        in: "path"
        description: "Id of latency-characteristic"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.LatencyCharacteristic"
          schema:
            $ref: "#/definitions/tapi.topology.LatencyCharacteristicWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/name={value-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point={topology-uuid},{node-edge-point-node-uuid},{node-edge-point-uuid}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.NodeEdgePointRef"
      description: "NEPs and their client CEPs that the rules apply to."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "topology-uuid"
        in: "path"
        description: "Id of node-edge-point"
        required: true
        type: "string"
      - name: "node-edge-point-node-uuid"
        in: "path"
        description: "Id of node-edge-point"
        required: true
        type: "string"
      - name: "node-edge-point-uuid"
        in: "path"
        description: "Id of node-edge-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.NodeEdgePointRef"
          schema:
            $ref: "#/definitions/tapi.topology.NodeEdgePointRefWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/risk-characteristic={risk-characteristic-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.RiskCharacteristic"
      description: "A list of risk characteristics for consideration in an analysis\
        \ of shared risk. Each element of the list represents a specific risk consideration."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "risk-characteristic-name"
        in: "path"
        description: "Id of risk-characteristic"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.RiskCharacteristic"
          schema:
            $ref: "#/definitions/tapi.topology.RiskCharacteristicWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={local-id}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.Rule"
      description: "The list of rules of the NodeRuleGroup."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of rule"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.Rule"
          schema:
            $ref: "#/definitions/tapi.topology.RuleWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={local-id}/cep-port-role/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.PortRoleRule"
      description: "Indicates the port role to which the rule applies. \r\n      \
        \          The port role is interpreted in the context of the connection type\
        \ which is identified by the connection spec, if any.\r\n                The\
        \ port role is not meaningful in the absence of a connection spec reference.\r\
        \n                If a NodeRuleGroup carries a port role, that role applies\
        \ also to the associated InterRuleGroup where the combination of the roles\
        \ in the NodeRuleGroups at the ends of the InterGroupRule define the Connection\
        \ orientation.\r\n                For example a root-and-leaf Connection may\
        \ be used in a Node where a NodeRuleGroup collects one set of NEPs has the\
        \ port role 'root' and another NodeRuleGroup collects another set of NEPs\
        \ has the port role 'leaf' where these are joined by an InterRuleGroup.\r\n\
        \                This combination specifies an allowed orientation of the\
        \ root-and-leaf Connection.\r\n                No port role statement means\
        \ all port roles are allowed."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of rule"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.PortRoleRule"
          schema:
            $ref: "#/definitions/tapi.topology.PortRoleRuleWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={local-id}/connection-spec-reference/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.ConnectionSpecReference"
      description: "Identifies the type of Connection that the rule applies to. \r\
        \n                If the attribute is not present then the rule applies to\
        \ all types of Connection supported by the device."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of rule"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.ConnectionSpecReference"
          schema:
            $ref: "#/definitions/tapi.topology.ConnectionSpecReferenceWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={local-id}/name={value-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of rule"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={local-id}/signal-property/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.SignalPropertyRule"
      description: "The rule only applies to signals with the properties listed. \r\
        \n                If the attribute is not present then the rule applies to\
        \ all signals."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      - name: "local-id"
        in: "path"
        description: "Id of rule"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.SignalPropertyRule"
          schema:
            $ref: "#/definitions/tapi.topology.SignalPropertyRuleWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.Capacity"
      description: "An optimistic view of the capacity of the entity assuming that\
        \ any shared capacity is available to be taken."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.Capacity"
          schema:
            $ref: "#/definitions/tapi.common.CapacityWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.CapacityValue"
      description: "Total capacity of the entity. In case of bandwidthProfile, this\
        \ is expected to be the same as the committedInformationRate."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "node-rule-group-uuid"
        in: "path"
        description: "Id of node-rule-group"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.CapacityValue"
          schema:
            $ref: "#/definitions/tapi.common.CapacityValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/owned-node-edge-point={owned-node-edge-point-uuid}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.node.OwnedNodeEdgePoint"
      description: "The NEPs belonging to / owned by this Node.\r\n              \
        \  By convention, only the Node instances at the lowest partitioning level\
        \ 'own' the NEPs.\r\n                In other words, each and every NEP instance\
        \ is owned by a Node at the lowest partitioning level."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "owned-node-edge-point-uuid"
        in: "path"
        description: "Id of owned-node-edge-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.node.OwnedNodeEdgePoint"
          schema:
            $ref: "#/definitions/tapi.topology.node.OwnedNodeEdgePointWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/owned-node-edge-point={owned-node-edge-point-uuid}/aggregated-node-edge-point={topology-uuid},{aggregated-node-edge-point-node-uuid},{node-edge-point-uuid}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.NodeEdgePointRef"
      description: "A NodeEdgePoint (NEP) instance may aggregate one or more other\
        \ NEP instances for e.g. pooling purposes, when a set of NEP instances are\
        \ equivalent for usage."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "owned-node-edge-point-uuid"
        in: "path"
        description: "Id of owned-node-edge-point"
        required: true
        type: "string"
      - name: "topology-uuid"
        in: "path"
        description: "Id of aggregated-node-edge-point"
        required: true
        type: "string"
      - name: "aggregated-node-edge-point-node-uuid"
        in: "path"
        description: "Id of aggregated-node-edge-point"
        required: true
        type: "string"
      - name: "node-edge-point-uuid"
        in: "path"
        description: "Id of aggregated-node-edge-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.NodeEdgePointRef"
          schema:
            $ref: "#/definitions/tapi.topology.NodeEdgePointRefWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/owned-node-edge-point={owned-node-edge-point-uuid}/available-capacity/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.Capacity"
      description: "Capacity available to be assigned."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "owned-node-edge-point-uuid"
        in: "path"
        description: "Id of owned-node-edge-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.Capacity"
          schema:
            $ref: "#/definitions/tapi.common.CapacityWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/owned-node-edge-point={owned-node-edge-point-uuid}/available-capacity/total-size/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.CapacityValue"
      description: "Total capacity of the entity. In case of bandwidthProfile, this\
        \ is expected to be the same as the committedInformationRate."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "owned-node-edge-point-uuid"
        in: "path"
        description: "Id of owned-node-edge-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.CapacityValue"
          schema:
            $ref: "#/definitions/tapi.common.CapacityValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/owned-node-edge-point={owned-node-edge-point-uuid}/available-cep-layer-protocol={layer-protocol-qualifier}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.topology.NepLayerProtocolCapability"
      description: "The potentially supported protocols and flows.\r\n           \
        \     In ITU-T terms, the potentially supported adaptation and termination\
        \ functions. "
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "owned-node-edge-point-uuid"
        in: "path"
        description: "Id of owned-node-edge-point"
        required: true
        type: "string"
      - name: "layer-protocol-qualifier"
        in: "path"
        description: "Id of available-cep-layer-protocol"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.topology.NepLayerProtocolCapability"
          schema:
            $ref: "#/definitions/tapi.topology.NepLayerProtocolCapabilityWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/owned-node-edge-point={owned-node-edge-point-uuid}/mapped-service-interface-point={service-interface-point-uuid}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.ServiceInterfacePointRef"
      description: "A NodeEdgePoint (NEP) may be associated to a ServiceInterfacePoint\
        \ (SIP), i.e. when the NEP is the resource oriented view of a SIP.\r\n   \
        \             NEP mapped to more than one SIP (slicing/virtualizing) or a\
        \ SIP mapped to more than one NEP (load balancing/resilience) should be considered\
        \ experimental."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "owned-node-edge-point-uuid"
        in: "path"
        description: "Id of owned-node-edge-point"
        required: true
        type: "string"
      - name: "service-interface-point-uuid"
        in: "path"
        description: "Id of mapped-service-interface-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.ServiceInterfacePointRef"
          schema:
            $ref: "#/definitions/tapi.common.ServiceInterfacePointRefWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/owned-node-edge-point={owned-node-edge-point-uuid}/name={value-name}/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.NameAndValue"
      description: "List of names. This value is unique in some namespace but may\
        \ change during the life of the entity.\r\n                A name carries\
        \ no semantics with respect to the purpose of the entity."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "owned-node-edge-point-uuid"
        in: "path"
        description: "Id of owned-node-edge-point"
        required: true
        type: "string"
      - name: "value-name"
        in: "path"
        description: "Id of name"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.NameAndValue"
          schema:
            $ref: "#/definitions/tapi.common.NameAndValueWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/owned-node-edge-point={owned-node-edge-point-uuid}/tapi-equipment:supporting-access-port/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.SupportingAccessPort"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "owned-node-edge-point-uuid"
        in: "path"
        description: "Id of owned-node-edge-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.SupportingAccessPort"
          schema:
            $ref: "#/definitions/tapi.equipment.SupportingAccessPortWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/owned-node-edge-point={owned-node-edge-point-uuid}/tapi-equipment:supporting-access-port/access-port/
  : get:
      tags:
      - "tapi-equipment"
      summary: "returns tapi.equipment.AccessPortRef"
      description: "none"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "owned-node-edge-point-uuid"
        in: "path"
        description: "Id of owned-node-edge-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.equipment.AccessPortRef"
          schema:
            $ref: "#/definitions/tapi.equipment.AccessPortRefWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/owned-node-edge-point={owned-node-edge-point-uuid}/total-potential-capacity/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.Capacity"
      description: "An optimistic view of the capacity of the entity assuming that\
        \ any shared capacity is available to be taken."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "owned-node-edge-point-uuid"
        in: "path"
        description: "Id of owned-node-edge-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.Capacity"
          schema:
            $ref: "#/definitions/tapi.common.CapacityWrapper"
        400:
          description: "Internal error"
  ? /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/owned-node-edge-point={owned-node-edge-point-uuid}/total-potential-capacity/total-size/
  : get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.CapacityValue"
      description: "Total capacity of the entity. In case of bandwidthProfile, this\
        \ is expected to be the same as the committedInformationRate."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      - name: "owned-node-edge-point-uuid"
        in: "path"
        description: "Id of owned-node-edge-point"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.CapacityValue"
          schema:
            $ref: "#/definitions/tapi.common.CapacityValueWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/total-potential-capacity/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.Capacity"
      description: "An optimistic view of the capacity of the entity assuming that\
        \ any shared capacity is available to be taken."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.Capacity"
          schema:
            $ref: "#/definitions/tapi.common.CapacityWrapper"
        400:
          description: "Internal error"
  /data/tapi-common:context/tapi-topology:topology-context/topology={uuid}/node={node-uuid}/total-potential-capacity/total-size/:
    get:
      tags:
      - "tapi-topology"
      summary: "returns tapi.common.CapacityValue"
      description: "Total capacity of the entity. In case of bandwidthProfile, this\
        \ is expected to be the same as the committedInformationRate."
      parameters:
      - name: "uuid"
        in: "path"
        description: "Id of topology"
        required: true
        type: "string"
      - name: "node-uuid"
        in: "path"
        description: "Id of node"
        required: true
        type: "string"
      responses:
        200:
          description: "tapi.common.CapacityValue"
          schema:
            $ref: "#/definitions/tapi.common.CapacityValueWrapper"
        400:
          description: "Internal error"
  /operations/tapi-common:get-service-interface-point-details/:
    post:
      tags:
      - "tapi-common"
      summary: "operates on tapi.common.GetServiceInterfacePointDetails"
      description: "operates on tapi.common.GetServiceInterfacePointDetails"
      parameters:
      - in: "body"
        name: "tapi.common.getserviceinterfacepointdetails.Input.body-param"
        required: false
        schema:
          properties:
            input:
              $ref: "#/definitions/tapi.common.getserviceinterfacepointdetails.Input"
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.common.GetServiceInterfacePointDetails"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-common:get-service-interface-point-list/:
    post:
      tags:
      - "tapi-common"
      parameters: []
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.common.GetServiceInterfacePointList"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-common:update-service-interface-point/:
    post:
      tags:
      - "tapi-common"
      summary: "operates on tapi.common.UpdateServiceInterfacePoint"
      description: "operates on tapi.common.UpdateServiceInterfacePoint"
      parameters:
      - in: "body"
        name: "tapi.common.updateserviceinterfacepoint.Input.body-param"
        required: false
        schema:
          properties:
            input:
              $ref: "#/definitions/tapi.common.updateserviceinterfacepoint.Input"
      responses:
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-equipment:get-device-list/:
    post:
      tags:
      - "tapi-equipment"
      parameters: []
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.equipment.GetDeviceList"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-equipment:get-device/:
    post:
      tags:
      - "tapi-equipment"
      summary: "operates on tapi.equipment.GetDevice"
      description: "operates on tapi.equipment.GetDevice"
      parameters:
      - in: "body"
        name: "tapi.equipment.getdevice.Input.body-param"
        required: false
        schema:
          properties:
            input:
              $ref: "#/definitions/tapi.equipment.getdevice.Input"
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.equipment.GetDevice"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-equipment:get-physical-span-list/:
    post:
      tags:
      - "tapi-equipment"
      parameters: []
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.equipment.GetPhysicalSpanList"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-equipment:get-physical-span/:
    post:
      tags:
      - "tapi-equipment"
      summary: "operates on tapi.equipment.GetPhysicalSpan"
      description: "operates on tapi.equipment.GetPhysicalSpan"
      parameters:
      - in: "body"
        name: "tapi.equipment.getphysicalspan.Input.body-param"
        required: false
        schema:
          properties:
            input:
              $ref: "#/definitions/tapi.equipment.getphysicalspan.Input"
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.equipment.GetPhysicalSpan"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-notification:create-notification-subscription-service/:
    post:
      tags:
      - "tapi-notification"
      summary: "operates on tapi.notification.CreateNotificationSubscriptionService"
      description: "operates on tapi.notification.CreateNotificationSubscriptionService"
      parameters:
      - in: "body"
        name: "tapi.notification.createnotificationsubscriptionservice.Input.body-param"
        required: false
        schema:
          properties:
            input:
              $ref: "#/definitions/tapi.notification.createnotificationsubscriptionservice.Input"
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.notification.CreateNotificationSubscriptionService"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-notification:delete-notification-subscription-service/:
    post:
      tags:
      - "tapi-notification"
      summary: "operates on tapi.notification.DeleteNotificationSubscriptionService"
      description: "operates on tapi.notification.DeleteNotificationSubscriptionService"
      parameters:
      - in: "body"
        name: "tapi.notification.deletenotificationsubscriptionservice.Input.body-param"
        required: false
        schema:
          properties:
            input:
              $ref: "#/definitions/tapi.notification.deletenotificationsubscriptionservice.Input"
      responses:
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-notification:get-notification-list/:
    post:
      tags:
      - "tapi-notification"
      summary: "operates on tapi.notification.GetNotificationList"
      description: "operates on tapi.notification.GetNotificationList"
      parameters:
      - in: "body"
        name: "tapi.notification.getnotificationlist.Input.body-param"
        required: false
        schema:
          properties:
            input:
              $ref: "#/definitions/tapi.notification.getnotificationlist.Input"
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.notification.GetNotificationList"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-notification:get-notification-subscription-service-details/:
    post:
      tags:
      - "tapi-notification"
      summary: "operates on tapi.notification.GetNotificationSubscriptionServiceDetails"
      description: "operates on tapi.notification.GetNotificationSubscriptionServiceDetails"
      parameters:
      - in: "body"
        name: "tapi.notification.getnotificationsubscriptionservicedetails.Input.body-param"
        required: false
        schema:
          properties:
            input:
              $ref: "#/definitions/tapi.notification.getnotificationsubscriptionservicedetails.Input"
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.notification.GetNotificationSubscriptionServiceDetails"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-notification:get-notification-subscription-service-list/:
    post:
      tags:
      - "tapi-notification"
      parameters: []
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.notification.GetNotificationSubscriptionServiceList"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-notification:get-supported-notification-types/:
    post:
      tags:
      - "tapi-notification"
      parameters: []
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.notification.GetSupportedNotificationTypes"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-notification:update-notification-subscription-service/:
    post:
      tags:
      - "tapi-notification"
      summary: "operates on tapi.notification.UpdateNotificationSubscriptionService"
      description: "operates on tapi.notification.UpdateNotificationSubscriptionService"
      parameters:
      - in: "body"
        name: "tapi.notification.updatenotificationsubscriptionservice.Input.body-param"
        required: false
        schema:
          properties:
            input:
              $ref: "#/definitions/tapi.notification.updatenotificationsubscriptionservice.Input"
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.notification.UpdateNotificationSubscriptionService"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-topology:get-link-details/:
    post:
      tags:
      - "tapi-topology"
      summary: "operates on tapi.topology.GetLinkDetails"
      description: "operates on tapi.topology.GetLinkDetails"
      parameters:
      - in: "body"
        name: "tapi.topology.getlinkdetails.Input.body-param"
        required: false
        schema:
          properties:
            input:
              $ref: "#/definitions/tapi.topology.getlinkdetails.Input"
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.topology.GetLinkDetails"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-topology:get-node-details/:
    post:
      tags:
      - "tapi-topology"
      summary: "operates on tapi.topology.GetNodeDetails"
      description: "operates on tapi.topology.GetNodeDetails"
      parameters:
      - in: "body"
        name: "tapi.topology.getnodedetails.Input.body-param"
        required: false
        schema:
          properties:
            input:
              $ref: "#/definitions/tapi.topology.getnodedetails.Input"
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.topology.GetNodeDetails"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-topology:get-node-edge-point-details/:
    post:
      tags:
      - "tapi-topology"
      summary: "operates on tapi.topology.GetNodeEdgePointDetails"
      description: "operates on tapi.topology.GetNodeEdgePointDetails"
      parameters:
      - in: "body"
        name: "tapi.topology.getnodeedgepointdetails.Input.body-param"
        required: false
        schema:
          properties:
            input:
              $ref: "#/definitions/tapi.topology.getnodeedgepointdetails.Input"
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.topology.GetNodeEdgePointDetails"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-topology:get-topology-details/:
    post:
      tags:
      - "tapi-topology"
      summary: "operates on tapi.topology.GetTopologyDetails"
      description: "operates on tapi.topology.GetTopologyDetails"
      parameters:
      - in: "body"
        name: "tapi.topology.gettopologydetails.Input.body-param"
        required: false
        schema:
          properties:
            input:
              $ref: "#/definitions/tapi.topology.gettopologydetails.Input"
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.topology.GetTopologyDetails"
        201:
          description: "No response"
        400:
          description: "Internal error"
  /operations/tapi-topology:get-topology-list/:
    post:
      tags:
      - "tapi-topology"
      parameters: []
      responses:
        200:
          description: "Correct response"
          schema:
            $ref: "#/definitions/tapi.topology.GetTopologyList"
        201:
          description: "No response"
        400:
          description: "Internal error"
definitions:
  tapi.common.AdminStatePac:
    type: "object"
    properties:
      operational-state:
        description: "The operational state gives the information about the real capability\
          \ of a resource to provide or not provide service."
        $ref: "#/definitions/tapi.common.OperationalState"
      lifecycle-state:
        description: "Used to track the planned deployment, allocation to clients\
          \ and withdrawal of resources."
        $ref: "#/definitions/tapi.common.LifecycleState"
      administrative-state:
        description: "The administration of managed objects operates independently\
          \ of the operability and usage of managed objects and is described by the\
          \ administrative state attribute. The administrative state is used by the\
          \ operator to make a resource available for service, or to remove a resource\
          \ from service."
        $ref: "#/definitions/tapi.common.AdministrativeState"
  tapi.common.AdministrativeState:
    type: "string"
    enum:
    - "LOCKED"
    - "UNLOCKED"
  tapi.common.Capacity:
    type: "object"
    properties:
      total-size:
        description: "Total capacity of the entity. In case of bandwidthProfile, this\
          \ is expected to be the same as the committedInformationRate."
        $ref: "#/definitions/tapi.common.CapacityValue"
  tapi.common.CapacityPac:
    type: "object"
    properties:
      available-capacity:
        description: "Capacity available to be assigned."
        $ref: "#/definitions/tapi.common.Capacity"
      total-potential-capacity:
        description: "An optimistic view of the capacity of the entity assuming that\
          \ any shared capacity is available to be taken."
        $ref: "#/definitions/tapi.common.Capacity"
  tapi.common.CapacityUnit:
    type: "string"
    enum:
    - "TB"
    - "TBPS"
    - "GB"
    - "GBPS"
    - "MB"
    - "MBPS"
    - "KB"
    - "KBPS"
    - "GHz"
    - "MHz"
  tapi.common.CapacityValue:
    type: "object"
    properties:
      value:
        type: "integer"
        format: "int32"
        description: "The specific value of the capacity."
      unit:
        description: "The specific unit of measurement of the capacity."
        $ref: "#/definitions/tapi.common.CapacityUnit"
  tapi.common.CapacityValueWrapper:
    properties:
      total-size:
        $ref: "#/definitions/tapi.common.CapacityValue"
  tapi.common.CapacityWrapper:
    properties:
      available-capacity:
        $ref: "#/definitions/tapi.common.Capacity"
  tapi.common.Context:
    allOf:
    - $ref: "#/definitions/tapi.common.TapiContext"
    - $ref: "#/definitions/tapi.equipment.ContextAugmentation2"
    - $ref: "#/definitions/tapi.notification.ContextAugmentation1"
    - $ref: "#/definitions/tapi.topology.ContextAugmentation3"
  tapi.common.ContextWrapper:
    properties:
      tapi-common:context:
        $ref: "#/definitions/tapi.common.Context"
  tapi.common.ForwardingDirection:
    type: "string"
    enum:
    - "BIDIRECTIONAL"
    - "UNIDIRECTIONAL"
    - "UNDEFINED_OR_UNKNOWN"
  tapi.common.GetServiceInterfacePointDetails:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.common.getserviceinterfacepointdetails.Output"
  tapi.common.GetServiceInterfacePointList:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.common.getserviceinterfacepointlist.Output"
  tapi.common.GlobalClass:
    type: "object"
    properties:
      name:
        type: "array"
        description: "List of names. This value is unique in some namespace but may\
          \ change during the life of the entity.\r\n                A name carries\
          \ no semantics with respect to the purpose of the entity."
        items:
          $ref: "#/definitions/tapi.common.NameAndValue"
      uuid:
        type: "string"
        description: "UUID: An identifier that is universally unique within an identifier\
          \ space, where the identifier space is itself globally unique, and immutable.\r\
          \n                An UUID carries no semantics with respect to the purpose\
          \ or state of the entity.\r\n                UUID here uses string representation\
          \ as defined in RFC 4122.  The canonical representation uses lowercase characters.\r\
          \n                Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-'\
          \ + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \r\n                Example of a UUID\
          \ in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
  tapi.common.LayerProtocolName:
    type: "string"
    enum:
    - "ODU"
    - "ETH"
    - "DSR"
    - "PHOTONIC_MEDIA"
  tapi.common.LifecycleState:
    type: "string"
    enum:
    - "PLANNED"
    - "POTENTIAL_AVAILABLE"
    - "POTENTIAL_BUSY"
    - "INSTALLED"
    - "PENDING_REMOVAL"
  tapi.common.LocalClass:
    type: "object"
    properties:
      name:
        type: "array"
        description: "List of names. This value is unique in some namespace but may\
          \ change during the life of the entity.\r\n                A name carries\
          \ no semantics with respect to the purpose of the entity."
        items:
          $ref: "#/definitions/tapi.common.NameAndValue"
      local-id:
        type: "string"
        description: "An identifier that is unique in the context of the GlobalClass\
          \ from which it is inseparable."
  tapi.common.NameAndValue:
    type: "object"
    properties:
      value-name:
        type: "string"
        description: "The name of the value. Optional, the value need not to have\
          \ a name."
      value:
        type: "string"
        description: "The specific value."
  tapi.common.NameAndValueWrapper:
    properties:
      name:
        $ref: "#/definitions/tapi.common.NameAndValue"
  tapi.common.OperationalState:
    type: "string"
    enum:
    - "DISABLED"
    - "ENABLED"
  tapi.common.PortDirection:
    type: "string"
    enum:
    - "BIDIRECTIONAL"
    - "INPUT"
    - "OUTPUT"
    - "UNIDENTIFIED_OR_UNKNOWN"
  tapi.common.PortRole:
    type: "string"
    enum:
    - "SYMMETRIC"
    - "ROOT"
    - "LEAF"
    - "TRUNK"
    - "UNKNOWN"
  tapi.common.ServiceInterfacePoint:
    allOf:
    - $ref: "#/definitions/tapi.common.AdminStatePac"
    - $ref: "#/definitions/tapi.common.CapacityPac"
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - type: "object"
      properties:
        supported-layer-protocol-qualifier:
          type: "array"
          description: "The supported sub-layer(s) or rate(s) of Layer Protocol."
          items:
            type: "string"
        layer-protocol-name:
          description: "The layer protocol of the ServiceInterfacePoint (SIP).\r\n\
            \                Usage of layerProtocolName [>1]  in the ServiceInterfacePoint\
            \ should be considered experimental."
          $ref: "#/definitions/tapi.common.LayerProtocolName"
        direction:
          description: "The orientation of flow at the (conceptual) port of the potentially\
            \ supported ConnectivityService(s).\r\n                If direction attribute\
            \ is missing the ServiceInterfacePoint (SIP) instance is to be intended\
            \ as 'BIDIRECTIONAL'"
          $ref: "#/definitions/tapi.common.PortDirection"
      description: "A Service Interface Point represents the network-interface-facing\
        \ aspects of the edge-port functions that access the forwarding capabilities\
        \ provided by the Node. Hence it provides a limited, simplified view of interest\
        \ to external clients (e.g. shared addressing, capacity, resource availability,\
        \ etc.), that enable the clients to request connectivity without the need\
        \ to understand the provider network internals."
  tapi.common.ServiceInterfacePointRef:
    type: "object"
    properties:
      service-interface-point-uuid:
        type: "string"
        description: "none"
        x-path: "/tapi-common:context/tapi-common:service-interface-point/tapi-common:uuid"
  tapi.common.ServiceInterfacePointRefWrapper:
    properties:
      mapped-service-interface-point:
        $ref: "#/definitions/tapi.common.ServiceInterfacePointRef"
  tapi.common.ServiceInterfacePointWrapper:
    properties:
      service-interface-point:
        $ref: "#/definitions/tapi.common.ServiceInterfacePoint"
  tapi.common.TapiContext:
    allOf:
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - type: "object"
      properties:
        service-interface-point:
          type: "array"
          description: "The ServiceInterfacePoint (SIP) instances belonging to this\
            \ context."
          items:
            $ref: "#/definitions/tapi.common.ServiceInterfacePoint"
      description: "This object class represents the scope of control that a particular\
        \ SDN controller has with respect to a particular network, (i.e., encompassing\
        \ a designated set of interconnected (virtual) network elements).\r\n    \
        \        This class includes the list of Service Interface Points.\r\n   \
        \         This class can be augmented by specific contexts, e.g. topology\
        \ context."
  tapi.common.TerminationDirection:
    type: "string"
    enum:
    - "BIDIRECTIONAL"
    - "SINK"
    - "SOURCE"
    - "UNDEFINED_OR_UNKNOWN"
  tapi.common.TerminationPac:
    type: "object"
    properties:
      termination-direction:
        description: "The overall directionality of the termination entity."
        $ref: "#/definitions/tapi.common.TerminationDirection"
      termination-state:
        description: "Indicates whether the layer is terminated and if so how."
        $ref: "#/definitions/tapi.common.TerminationState"
  tapi.common.TerminationState:
    type: "string"
    enum:
    - "CAN_NEVER_TERMINATE"
    - "NOT_TERMINATED"
    - "TERMINATED_SERVER_TO_CLIENT_FLOW"
    - "TERMINATED_CLIENT_TO_SERVER_FLOW"
    - "TERMINATED_BIDIRECTIONAL"
    - "PERMANENTLY_TERMINATED"
    - "TERMINATION_STATE_UNKNOWN"
  tapi.common.TimeRange:
    type: "object"
    properties:
      end-time:
        type: "string"
        description: "Date and time of the range end."
      start-time:
        type: "string"
        description: "Date and time of the range start."
  tapi.common.getserviceinterfacepointdetails.Input:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "UUID of the ServiceInterfacePoint (SIP) instance.\r\n      \
          \              UUID: An identifier that is universally unique within an\
          \ identifier space, where the identifier space is itself globally unique,\
          \ and immutable.\r\n                    An UUID carries no semantics with\
          \ respect to the purpose or state of the entity.\r\n                   \
          \ UUID here uses string representation as defined in RFC 4122.  The canonical\
          \ representation uses lowercase characters.\r\n                    Pattern:\
          \ [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\
          \ \r\n                    Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
  tapi.common.getserviceinterfacepointdetails.Output:
    type: "object"
    properties:
      sip:
        description: "The requested SIP instance."
        $ref: "#/definitions/tapi.common.ServiceInterfacePoint"
  tapi.common.getserviceinterfacepointlist.Output:
    type: "object"
    properties:
      sip:
        type: "array"
        description: "The requested list of SIP instances."
        items:
          $ref: "#/definitions/tapi.common.ServiceInterfacePoint"
  tapi.common.updateserviceinterfacepoint.Input:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "UUID of the ServiceInterfacePoint (SIP) instance.\r\n      \
          \              UUID: An identifier that is universally unique within an\
          \ identifier space, where the identifier space is itself globally unique,\
          \ and immutable.\r\n                    An UUID carries no semantics with\
          \ respect to the purpose or state of the entity.\r\n                   \
          \ UUID here uses string representation as defined in RFC 4122.  The canonical\
          \ representation uses lowercase characters.\r\n                    Pattern:\
          \ [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\
          \ \r\n                    Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
      state:
        description: "The requested update of Administrative State."
        $ref: "#/definitions/tapi.common.AdministrativeState"
  tapi.equipment.AbstractStrand:
    allOf:
    - $ref: "#/definitions/tapi.common.LocalClass"
    - type: "object"
      properties:
        strand-media-characteristics:
          type: "array"
          description: "Relevant physical properties of the abstract strand."
          items:
            $ref: "#/definitions/tapi.common.NameAndValue"
        connector-pin:
          type: "array"
          description: "A strand can end on two or more Pins (usually 2 pins, but\
            \ a strand my be spliced to split a signal). This model supports only\
            \ 2 ended strands.\r\n                A abstract strand may be spliced\
            \ at both ends and hence have no direct relationship to pins or may be\
            \ connected to pins at one or both ends.\r\n                In the essential\
            \ model these Pins would be on connectors that plug in to connectors on\
            \ Equipments.\r\n                The AbstractStrand is extended to the\
            \ pins of the AccessPort which are the Pins on the Connectors of the Equipment.\r\
            \n                In some cases it may not be relevant to represent the\
            \ pin detail and hence the reference is to a connector alone."
          items:
            $ref: "#/definitions/tapi.equipment.ConnectorPinAddress"
        spliced-strand:
          type: "array"
          description: "none"
          items:
            $ref: "#/definitions/tapi.equipment.AbstractStrandRef"
        adjacent-strand:
          type: "array"
          description: "none"
          items:
            $ref: "#/definitions/tapi.equipment.AbstractStrandRef"
      description: "This object represents an abstraction of one or more strands in\
        \ series that provides sufficient detail to enable appropriate engineering.\r\
        \n            A strand represents a continuous long, thin piece of a medium\
        \ such as glass fiber or copper wire.\r\n            In this model a Strand:\r\
        \n            - a strand has two ends\r\n            - a splice can only be\
        \ between 2 strands.\r\n            - the end of a strand may have a splice,\
        \ a connector or be hidden\r\n            - only one end can be hidden in\
        \ an equipment\r\n            - where a cable has more than two end each strand\
        \ only goes between two of the ends\r\n            This model does NOT account\
        \ for multiple copper strands being spliced."
  tapi.equipment.AbstractStrandRef:
    allOf:
    - $ref: "#/definitions/tapi.equipment.PhysicalSpanRef"
    - type: "object"
      properties:
        abstract-strand-local-id:
          type: "string"
          description: "none"
          x-path: "/tapi-common:context/tapi-equipment:physical-context/tapi-equipment:physical-span/tapi-equipment:abstract-strand/tapi-equipment:local-id"
      description: "none"
  tapi.equipment.AbstractStrandRefWrapper:
    properties:
      adjacent-strand:
        $ref: "#/definitions/tapi.equipment.AbstractStrandRef"
  tapi.equipment.AbstractStrandWrapper:
    properties:
      abstract-strand:
        $ref: "#/definitions/tapi.equipment.AbstractStrand"
  tapi.equipment.AccessPort:
    allOf:
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - type: "object"
      properties:
        connector-pin:
          type: "array"
          description: "The list of Pins that support the AccessPort."
          items:
            $ref: "#/definitions/tapi.equipment.ConnectorPinAddress"
      description: "A group of pins that together support a signal group where any\
        \ one pin removed from the group will prevent all signals of the signal group\
        \ from flowing successfully.\r\n            In some cases the AccessPort may\
        \ simply reference a single connector (e.g., where the pin-connector association\
        \ is simpe such that the AccessPort references all pinsof one connector)."
  tapi.equipment.AccessPortRef:
    allOf:
    - $ref: "#/definitions/tapi.equipment.DeviceRef"
    - type: "object"
      properties:
        access-port-uuid:
          type: "string"
          description: "none"
          x-path: "/tapi-common:context/tapi-equipment:physical-context/tapi-equipment:device/tapi-equipment:access-port/tapi-equipment:uuid"
      description: "none"
  tapi.equipment.AccessPortRefWrapper:
    properties:
      access-port:
        $ref: "#/definitions/tapi.equipment.AccessPortRef"
  tapi.equipment.AccessPortWrapper:
    properties:
      access-port:
        $ref: "#/definitions/tapi.equipment.AccessPort"
  tapi.equipment.ActualEquipment:
    type: "object"
    properties:
      common-actual-properties:
        description: "none"
        $ref: "#/definitions/tapi.equipment.CommonActualProperties"
      actual-non-field-replaceable-module:
        type: "array"
        description: "none"
        items:
          $ref: "#/definitions/tapi.equipment.ActualNonFieldReplaceableModule"
      common-equipment-properties:
        description: "none"
        $ref: "#/definitions/tapi.equipment.CommonEquipmentProperties"
  tapi.equipment.ActualEquipmentWrapper:
    properties:
      actual-equipment:
        $ref: "#/definitions/tapi.equipment.ActualEquipment"
  tapi.equipment.ActualHolder:
    type: "object"
    properties:
      common-holder-properties:
        description: "none"
        $ref: "#/definitions/tapi.equipment.CommonHolderProperties"
  tapi.equipment.ActualHolderWrapper:
    properties:
      actual-holder:
        $ref: "#/definitions/tapi.equipment.ActualHolder"
  tapi.equipment.ActualNonFieldReplaceableModule:
    type: "object"
    properties:
      common-actual-properties:
        description: "none"
        $ref: "#/definitions/tapi.equipment.CommonActualProperties"
      common-equipment-properties:
        description: "none"
        $ref: "#/definitions/tapi.equipment.CommonEquipmentProperties"
  tapi.equipment.ActualNonFieldReplaceableModuleWrapper:
    properties:
      actual-non-field-replaceable-module:
        $ref: "#/definitions/tapi.equipment.ActualNonFieldReplaceableModule"
  tapi.equipment.CommonActualProperties:
    type: "object"
    properties:
      temperature:
        type: "string"
        description: "The measured temperature of the Equipment."
      manufacture-date:
        type: "string"
        description: "This attribute represents the date on which this instance is\
          \ manufactured."
      is-powered:
        type: "boolean"
        description: "The state of the power being supplied to the equipment.\r\n\
          \                Note that this attribute summarizes the power state. \r\
          \n                Full details on the actual power system would be provided\
          \ from a number of PC instances representing the relevant parts of the Power\
          \ function (e.g. different voltage supplies)."
        default: false
      serial-number:
        type: "string"
        description: "This attribute represents the serial number of this instance."
      asset-instance-identifier:
        type: "string"
        description: "This attribute represents the asset identifier of this instance\
          \ from the manufacturer's perspective."
  tapi.equipment.CommonActualPropertiesWrapper:
    properties:
      common-actual-properties:
        $ref: "#/definitions/tapi.equipment.CommonActualProperties"
  tapi.equipment.CommonEquipmentProperties:
    type: "object"
    properties:
      equipment-type-version:
        type: "string"
        description: "This attribute identifies the version of the equipment."
      manufacturer-name:
        type: "string"
        description: "The formal name of the manufacturer of the Equipment."
      equipment-type-description:
        type: "string"
        description: "Text describing the type of Equipment."
      manufacturer-identifier:
        type: "string"
        description: "The formal unique identifier of the manufacturer."
      equipment-type-name:
        type: "string"
        description: "This attribute identifies the type of the equipment."
      equipment-type-identifier:
        type: "string"
        description: "This attribute identifies the part type of the equipment."
      asset-type-identifier:
        type: "string"
        description: "Represents the invariant properties of the equipment asset allocated\
          \ by the operator that define and characterize the type."
  tapi.equipment.CommonEquipmentPropertiesWrapper:
    properties:
      common-equipment-properties:
        $ref: "#/definitions/tapi.equipment.CommonEquipmentProperties"
  tapi.equipment.CommonHolderProperties:
    type: "object"
    properties:
      holder-location:
        type: "string"
        description: "The relative position of the holder in the context of its containing\
          \ equipment along with the position of that containing Equipment (and further\
          \ recursion)."
      is-guided:
        type: "boolean"
        description: "This attribute indicates whether the holder has guides that\
          \ constrain the position of the equipment in the holder or not."
        default: false
      holder-category:
        type: "string"
        description: "The type of holder."
  tapi.equipment.CommonHolderPropertiesWrapper:
    properties:
      common-holder-properties:
        $ref: "#/definitions/tapi.equipment.CommonHolderProperties"
  tapi.equipment.ConnectorPinAddress:
    type: "object"
    properties:
      connector-identification:
        type: "string"
        description: "Identification of the Connector in the context of the referenced\
          \ Equipment."
      equipment-uuid:
        type: "string"
        description: "Reference to the Equipment that is fitted with the Connector/Pin."
      pin-and-role:
        type: "array"
        description: "If there is more than one pin used in a connector and/or there\
          \ is a need to identify the role of one or more pins then this property\
          \ can be used.\r\n                For simple cases pinIdentification can\
          \ be used instead."
        items:
          $ref: "#/definitions/tapi.equipment.PinAndRole"
      pin-identification:
        type: "string"
        description: "Where relevant, identification of the Pin in the context of\
          \ the connector.\r\n                Where the whole connector is used, then\
          \ individual Pins need not be identified.\r\n                Simple alternative\
          \ to pinAndRole."
  tapi.equipment.ConnectorPinAddressWrapper:
    properties:
      connector-pin:
        $ref: "#/definitions/tapi.equipment.ConnectorPinAddress"
  tapi.equipment.ContextAugmentation2:
    type: "object"
    properties:
      physical-context:
        description: "none"
        $ref: "#/definitions/tapi.equipment.PhysicalContext"
    x-augmentation:
      prefix: "tapi-equipment"
      namespace: "urn:onf:otcc:yang:tapi-equipment"
  tapi.equipment.Device:
    allOf:
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - type: "object"
      properties:
        equipment:
          type: "array"
          description: "none"
          items:
            $ref: "#/definitions/tapi.equipment.Equipment"
        access-port:
          type: "array"
          description: "none"
          items:
            $ref: "#/definitions/tapi.equipment.AccessPort"
      description: "A logical grouping of Equipments and AccessPorts that are closely\
        \ located and form a support a coherent system of related functions."
  tapi.equipment.DeviceRef:
    type: "object"
    properties:
      device-uuid:
        type: "string"
        description: "none"
        x-path: "/tapi-common:context/tapi-equipment:physical-context/tapi-equipment:device/tapi-equipment:uuid"
  tapi.equipment.DeviceWrapper:
    properties:
      device:
        $ref: "#/definitions/tapi.equipment.Device"
  tapi.equipment.Equipment:
    allOf:
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - type: "object"
      properties:
        contained-holder:
          type: "array"
          description: "References the Holder in an Equipment that is available to\
            \ take other Equipments.\r\n                For example:\r\n         \
            \       - Slot in a sub-rack\r\n                - Slot in a Field Replaceable\
            \ Unit that can take a small form-factor pluggable."
          items:
            $ref: "#/definitions/tapi.equipment.Holder"
        actual-equipment:
          description: "none"
          $ref: "#/definitions/tapi.equipment.ActualEquipment"
        is-expected-actual-mismatch:
          type: "boolean"
          description: "none"
          default: false
        geographical-location:
          type: "string"
          description: "none"
        expected-equipment:
          type: "array"
          description: "none"
          items:
            $ref: "#/definitions/tapi.equipment.ExpectedEquipment"
        equipment-location:
          type: "string"
          description: "none"
        category:
          type: "string"
          description: "This attribute provides the identifier for the form of equipments\
            \ regarded as having particular shared characteristics."
      description: "Represents any relevant physical thing. \r\n            Can be\
        \ either field replaceable or not field replaceable.\r\n            Note:\
        \ The model is currently constrained to inside plant."
  tapi.equipment.EquipmentRef:
    allOf:
    - $ref: "#/definitions/tapi.equipment.DeviceRef"
    - type: "object"
      properties:
        equipment-uuid:
          type: "string"
          description: "none"
          x-path: "/tapi-common:context/tapi-equipment:physical-context/tapi-equipment:device/tapi-equipment:equipment/tapi-equipment:uuid"
      description: "none"
  tapi.equipment.EquipmentRefWrapper:
    properties:
      occupying-fru:
        $ref: "#/definitions/tapi.equipment.EquipmentRef"
  tapi.equipment.EquipmentWrapper:
    properties:
      equipment:
        $ref: "#/definitions/tapi.equipment.Equipment"
  tapi.equipment.ExpectedEquipment:
    type: "object"
    properties:
      expected-holder:
        type: "array"
        description: "none"
        items:
          $ref: "#/definitions/tapi.equipment.ExpectedHolder"
      expected-non-field-replaceable-module:
        type: "array"
        description: "none"
        items:
          $ref: "#/definitions/tapi.equipment.ExpectedNonFieldReplaceableModule"
      common-equipment-properties:
        description: "none"
        $ref: "#/definitions/tapi.equipment.CommonEquipmentProperties"
  tapi.equipment.ExpectedEquipmentWrapper:
    properties:
      expected-equipment:
        $ref: "#/definitions/tapi.equipment.ExpectedEquipment"
  tapi.equipment.ExpectedHolder:
    type: "object"
    properties:
      common-holder-properties:
        description: "none"
        $ref: "#/definitions/tapi.equipment.CommonHolderProperties"
  tapi.equipment.ExpectedHolderWrapper:
    properties:
      expected-holder:
        $ref: "#/definitions/tapi.equipment.ExpectedHolder"
  tapi.equipment.ExpectedNonFieldReplaceableModule:
    type: "object"
    properties:
      common-equipment-properties:
        description: "none"
        $ref: "#/definitions/tapi.equipment.CommonEquipmentProperties"
  tapi.equipment.ExpectedNonFieldReplaceableModuleWrapper:
    properties:
      expected-non-field-replaceable-module:
        $ref: "#/definitions/tapi.equipment.ExpectedNonFieldReplaceableModule"
  tapi.equipment.GetDevice:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.equipment.getdevice.Output"
  tapi.equipment.GetDeviceList:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.equipment.getdevicelist.Output"
  tapi.equipment.GetPhysicalSpan:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.equipment.getphysicalspan.Output"
  tapi.equipment.GetPhysicalSpanList:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.equipment.getphysicalspanlist.Output"
  tapi.equipment.Holder:
    allOf:
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - type: "object"
      properties:
        expected-holder:
          description: "none"
          $ref: "#/definitions/tapi.equipment.ExpectedHolder"
        actual-holder:
          description: "none"
          $ref: "#/definitions/tapi.equipment.ActualHolder"
        occupying-fru:
          description: "The FRU that is occupying the holder. \r\n               \
            \ A holder may be unoccupied. \r\n                An FRU may occupy more\
            \ hat one holder (using or blocking are intentionally not distinguished\
            \ here)."
          $ref: "#/definitions/tapi.equipment.EquipmentRef"
      description: "Represents a space in an equipment in which another equipment\
        \ can be fitted in the field."
  tapi.equipment.HolderWrapper:
    properties:
      contained-holder:
        $ref: "#/definitions/tapi.equipment.Holder"
  tapi.equipment.LinkAugmentation1:
    type: "object"
    properties:
      supporting-physical-span:
        description: "none"
        $ref: "#/definitions/tapi.equipment.SupportingPhysicalSpan"
    x-augmentation:
      prefix: "tapi-equipment"
      namespace: "urn:onf:otcc:yang:tapi-equipment"
  tapi.equipment.OwnedNodeEdgePointAugmentation1:
    type: "object"
    properties:
      supporting-access-port:
        description: "none"
        $ref: "#/definitions/tapi.equipment.SupportingAccessPort"
    x-augmentation:
      prefix: "tapi-equipment"
      namespace: "urn:onf:otcc:yang:tapi-equipment"
  tapi.equipment.PhysicalContext:
    type: "object"
    properties:
      device:
        type: "array"
        description: "none"
        items:
          $ref: "#/definitions/tapi.equipment.Device"
      physical-span:
        type: "array"
        description: "none"
        items:
          $ref: "#/definitions/tapi.equipment.PhysicalSpan"
  tapi.equipment.PhysicalContextWrapper:
    properties:
      tapi-equipment:physical-context:
        $ref: "#/definitions/tapi.equipment.PhysicalContext"
  tapi.equipment.PhysicalSpan:
    allOf:
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - type: "object"
      properties:
        abstract-strand:
          type: "array"
          description: "Both the serial segments that form an end-end strand and the\
            \ parallel end-end strands."
          items:
            $ref: "#/definitions/tapi.equipment.AbstractStrand"
        access-port:
          type: "array"
          description: "none"
          items:
            $ref: "#/definitions/tapi.equipment.AccessPortRef"
      description: "An adjacency between AccessPorts. \r\n            The adjacency\
        \ is supported by a group of strands between pins of the AccessPorts.\r\n\
        \            This is a physical abstraction."
  tapi.equipment.PhysicalSpanRef:
    type: "object"
    properties:
      physical-span-uuid:
        type: "string"
        description: "none"
        x-path: "/tapi-common:context/tapi-equipment:physical-context/tapi-equipment:physical-span/tapi-equipment:uuid"
  tapi.equipment.PhysicalSpanRefWrapper:
    properties:
      physical-span:
        $ref: "#/definitions/tapi.equipment.PhysicalSpanRef"
  tapi.equipment.PhysicalSpanWrapper:
    properties:
      physical-span:
        $ref: "#/definitions/tapi.equipment.PhysicalSpan"
  tapi.equipment.PinAndRole:
    type: "object"
    properties:
      pin-role:
        type: "array"
        description: "It is not always necessary to specify a role (or list of roles)\
          \ as the connector locationInConnector may be sufficient (as these are sometimes\
          \ clearly role based.\r\n                Each entry represents a role in\
          \ the context of the specific access port.\r\n                Each entry\
          \ ties the pin to a functional element in the associated NEP(s) etc.\r\n\
          \                For example:\r\n                - a pin might carry several\
          \ distinct signals where each signal is idenitified in the list\r\n    \
          \            - a pin may carry a signal and power\r\n                - a\
          \ signal carried by a pin may be the receive flow (INPUT) to a bidirectional\
          \ NEP or the transmit flow (OUTPUT) or indeed both (BIDIRECTIONAL)."
        items:
          type: "string"
      location-in-connector:
        type: "string"
        description: "The named location of the pin in the context of the connector.\r\
          \n                This is likely to be the normal numbering/naming for the\
          \ type of connetor, e.g. '7', '6-GND', 'Common' etc."
      pin-name:
        type: "string"
        description: "Where the pin has a distinct location identifier and a distinct\
          \ name this field can be used for the name.\r\n                For example:\r\
          \n                - locationInConnector = 6, pinName = GND"
  tapi.equipment.PinAndRoleWrapper:
    properties:
      pin-and-role:
        $ref: "#/definitions/tapi.equipment.PinAndRole"
  tapi.equipment.SupportingAccessPort:
    type: "object"
    properties:
      access-port:
        description: "none"
        $ref: "#/definitions/tapi.equipment.AccessPortRef"
  tapi.equipment.SupportingAccessPortWrapper:
    properties:
      tapi-equipment:supporting-access-port:
        $ref: "#/definitions/tapi.equipment.SupportingAccessPort"
  tapi.equipment.SupportingPhysicalSpan:
    type: "object"
    properties:
      physical-span:
        description: "none"
        $ref: "#/definitions/tapi.equipment.PhysicalSpanRef"
  tapi.equipment.SupportingPhysicalSpanWrapper:
    properties:
      tapi-equipment:supporting-physical-span:
        $ref: "#/definitions/tapi.equipment.SupportingPhysicalSpan"
  tapi.equipment.getdevice.Input:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "UUID: An identifier that is universally unique within an identifier\
          \ space, where the identifier space is itself globally unique, and immutable.\r\
          \n                    An UUID carries no semantics with respect to the purpose\
          \ or state of the entity.\r\n                    UUID here uses string representation\
          \ as defined in RFC 4122.  The canonical representation uses lowercase characters.\r\
          \n                    Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-'\
          \ + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \r\n                    Example of a\
          \ UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
  tapi.equipment.getdevice.Output:
    type: "object"
    properties:
      device:
        description: "none"
        $ref: "#/definitions/tapi.equipment.Device"
  tapi.equipment.getdevicelist.Output:
    type: "object"
    properties:
      device:
        type: "array"
        description: "none"
        items:
          $ref: "#/definitions/tapi.equipment.Device"
  tapi.equipment.getphysicalspan.Input:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "UUID: An identifier that is universally unique within an identifier\
          \ space, where the identifier space is itself globally unique, and immutable.\r\
          \n                    An UUID carries no semantics with respect to the purpose\
          \ or state of the entity.\r\n                    UUID here uses string representation\
          \ as defined in RFC 4122.  The canonical representation uses lowercase characters.\r\
          \n                    Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-'\
          \ + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \r\n                    Example of a\
          \ UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
  tapi.equipment.getphysicalspan.Output:
    type: "object"
    properties:
      physical-span:
        description: "none"
        $ref: "#/definitions/tapi.equipment.PhysicalSpan"
  tapi.equipment.getphysicalspanlist.Output:
    type: "object"
    properties:
      physical-span:
        type: "array"
        description: "none"
        items:
          $ref: "#/definitions/tapi.equipment.PhysicalSpan"
  tapi.notification.ContextAugmentation1:
    type: "object"
    properties:
      notification-context:
        description: "Augments the base TAPI Context with NotificationService information"
        $ref: "#/definitions/tapi.notification.NotificationContext"
    x-augmentation:
      prefix: "tapi-notification"
      namespace: "urn:onf:otcc:yang:tapi-notification"
  tapi.notification.CreateNotificationSubscriptionService:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.notification.createnotificationsubscriptionservice.Output"
  tapi.notification.GetNotificationList:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.notification.getnotificationlist.Output"
  tapi.notification.GetNotificationSubscriptionServiceDetails:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.notification.getnotificationsubscriptionservicedetails.Output"
  tapi.notification.GetNotificationSubscriptionServiceList:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.notification.getnotificationsubscriptionservicelist.Output"
  tapi.notification.GetSupportedNotificationTypes:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.notification.getsupportednotificationtypes.Output"
  tapi.notification.NameAndValueChange:
    type: "object"
    properties:
      value-name:
        type: "string"
        description: "The name of the value. The value need not have a name."
      old-value:
        type: "string"
        description: "The old value."
      new-value:
        type: "string"
        description: "The new value."
  tapi.notification.NameAndValueChangeWrapper:
    properties:
      changed-attributes:
        $ref: "#/definitions/tapi.notification.NameAndValueChange"
  tapi.notification.Notification:
    allOf:
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - type: "object"
      properties:
        target-object-type:
          type: "string"
          description: "The Notification instance is related to the object instance\
            \ with this ObjectType value."
        additional-text:
          type: "string"
          description: "Text available for unspecified content."
        event-time-stamp:
          type: "string"
          description: "The best knowledge of the time of the event which originated\
            \ this Notification instance."
        additional-info:
          type: "array"
          description: "Name and value list available for unspecified content."
          items:
            $ref: "#/definitions/tapi.common.NameAndValue"
        sequence-number:
          type: "integer"
          format: "int32"
          description: "A monotonous increasing sequence number associated with the\
            \ Notification instances.\r\n                The exact semantics of how\
            \ this sequence number is assigned (per channel or subscription or source\
            \ or system) is left undefined."
        target-object-identifier:
          type: "string"
          description: "The Notification instance is related to the object instance\
            \ with this UUID value."
        notification-type:
          type: "string"
          description: "The Notification type."
        target-object-name:
          type: "array"
          description: "The Notification instance is related to the object instance\
            \ with this list of names."
          items:
            $ref: "#/definitions/tapi.common.NameAndValue"
        layer-protocol-name:
          description: "The Notification instance is related to a resource with this\
            \ layer protocol value."
          $ref: "#/definitions/tapi.common.LayerProtocolName"
        source-indicator:
          description: "The possible source of this Notification instance."
          $ref: "#/definitions/tapi.notification.SourceIndicator"
        layer-protocol-qualifier:
          type: "string"
          description: "The Notification instance is related to a resource with this\
            \ layer protocol qualifier value."
        changed-attributes:
          type: "array"
          description: "The list of relevant changed attributes and their values."
          items:
            $ref: "#/definitions/tapi.notification.NameAndValueChange"
      description: "The Notification signal.\r\n            OMG UML(R) Version 2.5.1:\
        \ 'A Signal is a specification of a kind of communication between objects\
        \ in which a reaction is asynchronously triggered in the receiver without\
        \ a reply.\r\n            The data carried by the communication are represented\
        \ as attributes of the Signal.'"
  tapi.notification.NotificationChannel:
    allOf:
    - $ref: "#/definitions/tapi.common.LocalClass"
    - type: "object"
      properties:
        next-sequence-no:
          type: "integer"
          format: "int32"
          description: "The sequence number of the next notification that will be\
            \ published on the channel."
        stream-address:
          type: "string"
          description: "The address/location/URI of the channel/stream to which the\
            \ subscribed notifications are published.\r\n                The format\
            \ is typically dependent on the implementation protocol & mechanism and\
            \ hence is typed as a string."
      description: "The channel/stream to which the subscribed notifications are published."
  tapi.notification.NotificationChannelWrapper:
    properties:
      notification-channel:
        $ref: "#/definitions/tapi.notification.NotificationChannel"
  tapi.notification.NotificationContext:
    type: "object"
    properties:
      notif-subscription:
        type: "array"
        description: "The included NotificationSubscriptionService instances."
        items:
          $ref: "#/definitions/tapi.notification.NotificationSubscriptionService"
      notification:
        type: "array"
        description: "The included Notification instances."
        items:
          $ref: "#/definitions/tapi.notification.Notification"
  tapi.notification.NotificationContextWrapper:
    properties:
      tapi-notification:notification-context:
        $ref: "#/definitions/tapi.notification.NotificationContext"
  tapi.notification.NotificationSubscriptionService:
    allOf:
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - type: "object"
      properties:
        notification:
          type: "array"
          description: "The Notification instances associated to this NotificationSubscriptionService\
            \ instance."
          items:
            $ref: "#/definitions/tapi.notification.Notification"
        notification-channel:
          description: "The NotificationChannel instance of this NotificationSubscriptionService\
            \ instance."
          $ref: "#/definitions/tapi.notification.NotificationChannel"
        subscription-state:
          description: "The SubscriptionState value."
          $ref: "#/definitions/tapi.notification.SubscriptionState"
        supported-object-types:
          type: "array"
          description: "The supported ObjectType value(s) of this NotificationSubscriptionService\
            \ instance."
          items:
            type: "string"
        supported-notification-types:
          type: "array"
          description: "The supported NotificationType value(s) of this NotificationSubscriptionService\
            \ instance."
          items:
            type: "string"
        subscription-filter:
          description: "The SubscriptionFilter instance of this NotificationSubscriptionService\
            \ instance."
          $ref: "#/definitions/tapi.notification.SubscriptionFilter"
      description: "A NotificationSubscriptionService represents an 'intent-like'\
        \ request for the notification subscription.\r\n            The NotificationSubscriptionService\
        \ is a container for subscription request details."
  tapi.notification.NotificationSubscriptionServiceWrapper:
    properties:
      notif-subscription:
        $ref: "#/definitions/tapi.notification.NotificationSubscriptionService"
  tapi.notification.NotificationWrapper:
    properties:
      notification:
        $ref: "#/definitions/tapi.notification.Notification"
  tapi.notification.SourceIndicator:
    type: "string"
    enum:
    - "RESOURCE_OPERATION"
    - "MANAGEMENT_OPERATION"
    - "UNKNOWN"
  tapi.notification.SubscriptionFilter:
    allOf:
    - $ref: "#/definitions/tapi.common.LocalClass"
    - type: "object"
      properties:
        requested-notification-types:
          type: "array"
          description: "The requested NotificationType value(s)."
          items:
            type: "string"
        requested-object-identifier:
          type: "array"
          description: "The requested object identifier (UUID) value(s)."
          items:
            type: "string"
        requested-layer-protocols:
          type: "array"
          description: "The requested layer protocol value(s)."
          items:
            $ref: "#/definitions/tapi.common.LayerProtocolName"
        include-content:
          type: "boolean"
          description: "Indicates whether the published Notification includes content\
            \ or just the Notification Id (which enables retrieval of the notification\
            \ at the later stage)."
          default: false
        requested-object-types:
          type: "array"
          description: "The requested ObjectType value(s)."
          items:
            type: "string"
      description: "A SubscriptionFilter represents an 'intent-like' request for the\
        \ filters of the related notification subscription.\r\n            The SubscriptionFilter\
        \ is a container for filter request details."
  tapi.notification.SubscriptionFilterWrapper:
    properties:
      subscription-filter:
        $ref: "#/definitions/tapi.notification.SubscriptionFilter"
  tapi.notification.SubscriptionState:
    type: "string"
    enum:
    - "SUSPENDED"
    - "ACTIVE"
  tapi.notification.UpdateNotificationSubscriptionService:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.notification.updatenotificationsubscriptionservice.Output"
  tapi.notification.createnotificationsubscriptionservice.Input:
    type: "object"
    properties:
      subscription-state:
        description: "The subscription state of the NotificationSubscriptionService\
          \ instance to be created."
        $ref: "#/definitions/tapi.notification.SubscriptionState"
      name:
        type: "array"
        description: "List of names of the NotificationSubscriptionService instance\
          \ to be created.\r\n                    The value(s) is (are) unique in\
          \ some namespace but may change during the life of the entity. A name carries\
          \ no semantics with respect to the purpose of the entity."
        items:
          $ref: "#/definitions/tapi.common.NameAndValue"
      uuid:
        type: "string"
        description: "UUID of the NotificationSubscriptionService instance to be created.\r\
          \n                    UUID: An identifier that is universally unique within\
          \ an identifier space, where the identifier space is itself globally unique,\
          \ and immutable.\r\n                    An UUID carries no semantics with\
          \ respect to the purpose or state of the entity.\r\n                   \
          \ UUID here uses string representation as defined in RFC 4122.  The canonical\
          \ representation uses lowercase characters.\r\n                    Pattern:\
          \ [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\
          \ \r\n                    Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
      subscription-filter:
        description: "The parameters of the SubscriptionFilter instance to be associated\
          \ to the NotificationSubscriptionService instance under creation."
        $ref: "#/definitions/tapi.notification.SubscriptionFilter"
  tapi.notification.createnotificationsubscriptionservice.Output:
    type: "object"
    properties:
      subscription-service:
        description: "The created NotificationSubscriptionService instance."
        $ref: "#/definitions/tapi.notification.NotificationSubscriptionService"
  tapi.notification.deletenotificationsubscriptionservice.Input:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "UUID of the NotificationSubscriptionService instance to be deleted.\r\
          \n                    UUID: An identifier that is universally unique within\
          \ an identifier space, where the identifier space is itself globally unique,\
          \ and immutable.\r\n                    An UUID carries no semantics with\
          \ respect to the purpose or state of the entity.\r\n                   \
          \ UUID here uses string representation as defined in RFC 4122.  The canonical\
          \ representation uses lowercase characters.\r\n                    Pattern:\
          \ [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\
          \ \r\n                    Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
  tapi.notification.getnotificationlist.Input:
    type: "object"
    properties:
      time-range:
        description: "The time window of requested Notification instances."
        $ref: "#/definitions/tapi.common.TimeRange"
      subscription-id:
        type: "string"
        description: "UUID of the parent NotificationSubscriptionService instance.\r\
          \n                    UUID: An identifier that is universally unique within\
          \ an identifier space, where the identifier space is itself globally unique,\
          \ and immutable.\r\n                    An UUID carries no semantics with\
          \ respect to the purpose or state of the entity.\r\n                   \
          \ UUID here uses string representation as defined in RFC 4122.  The canonical\
          \ representation uses lowercase characters.\r\n                    Pattern:\
          \ [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\
          \ \r\n                    Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
  tapi.notification.getnotificationlist.Output:
    type: "object"
    properties:
      notification:
        type: "array"
        description: "The requested list of Notification instances."
        items:
          $ref: "#/definitions/tapi.notification.Notification"
  tapi.notification.getnotificationsubscriptionservicedetails.Input:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "UUID of the NotificationSubscriptionService instance.\r\n  \
          \                  UUID: An identifier that is universally unique within\
          \ an identifier space, where the identifier space is itself globally unique,\
          \ and immutable.\r\n                    An UUID carries no semantics with\
          \ respect to the purpose or state of the entity.\r\n                   \
          \ UUID here uses string representation as defined in RFC 4122.  The canonical\
          \ representation uses lowercase characters.\r\n                    Pattern:\
          \ [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\
          \ \r\n                    Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
  tapi.notification.getnotificationsubscriptionservicedetails.Output:
    type: "object"
    properties:
      subscription-service:
        description: "The requested NotificationSubscriptionService instance."
        $ref: "#/definitions/tapi.notification.NotificationSubscriptionService"
  tapi.notification.getnotificationsubscriptionservicelist.Output:
    type: "object"
    properties:
      subscription-service:
        type: "array"
        description: "The requested list of NotificationSubscriptionService instances."
        items:
          $ref: "#/definitions/tapi.notification.NotificationSubscriptionService"
  tapi.notification.getsupportednotificationtypes.Output:
    type: "object"
    properties:
      supported-object-types:
        type: "array"
        description: "The requested list of supported ObjectType values."
        items:
          type: "string"
      supported-notification-types:
        type: "array"
        description: "The requested list of supported NotificationType values."
        items:
          type: "string"
  tapi.notification.updatenotificationsubscriptionservice.Input:
    type: "object"
    properties:
      subscription-state:
        description: "The (updated) subscription state of the NotificationSubscriptionService\
          \ instance under update."
        $ref: "#/definitions/tapi.notification.SubscriptionState"
      name:
        type: "array"
        description: "List of names of the NotificationSubscriptionService instance\
          \ to be updated.\r\n                    The value(s) is (are) unique in\
          \ some namespace but may change during the life of the entity. A name carries\
          \ no semantics with respect to the purpose of the entity."
        items:
          $ref: "#/definitions/tapi.common.NameAndValue"
      uuid:
        type: "string"
        description: "UUID of the NotificationSubscriptionService instance to be updated.\r\
          \n                    UUID: An identifier that is universally unique within\
          \ an identifier space, where the identifier space is itself globally unique,\
          \ and immutable.\r\n                    An UUID carries no semantics with\
          \ respect to the purpose or state of the entity.\r\n                   \
          \ UUID here uses string representation as defined in RFC 4122.  The canonical\
          \ representation uses lowercase characters.\r\n                    Pattern:\
          \ [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\
          \ \r\n                    Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
      subscription-filter:
        description: "The (updated) parameters of the SubscriptionFilter instance\
          \ to be associated to the NotificationSubscriptionService instance under\
          \ update."
        $ref: "#/definitions/tapi.notification.SubscriptionFilter"
  tapi.notification.updatenotificationsubscriptionservice.Output:
    type: "object"
    properties:
      subscription-service:
        description: "The updated NotificationSubscriptionService instance."
        $ref: "#/definitions/tapi.notification.NotificationSubscriptionService"
  tapi.topology.ConnectionSpecReference:
    type: "object"
    properties:
      connection-spec:
        type: "string"
        description: "The reference to the formal Connection type spec."
      connection-spec-name:
        type: "string"
        description: "The name of the Connection type spec.\r\n                This\
          \ can be used as a reference to a paper document where full formal machine\
          \ interpretable specs are not supported."
  tapi.topology.ConnectionSpecReferenceWrapper:
    properties:
      connection-spec-reference:
        $ref: "#/definitions/tapi.topology.ConnectionSpecReference"
  tapi.topology.ContextAugmentation3:
    type: "object"
    properties:
      topology-context:
        description: "Augments the base TAPI Context with TopologyService information"
        $ref: "#/definitions/tapi.topology.TopologyContext"
    x-augmentation:
      prefix: "tapi-topology"
      namespace: "urn:onf:otcc:yang:tapi-topology"
  tapi.topology.CostCharacteristic:
    type: "object"
    properties:
      cost-value:
        type: "string"
        description: "The specific cost."
      cost-algorithm:
        type: "string"
        description: "The cost may vary based upon some properties of the topological\
          \ entity. The rules for the variation are conveyed by the costAlgorithm."
      cost-name:
        type: "string"
        description: "The cost characteristic will be related to some aspect of the\
          \ topological entity (e.g. $ cost, routing weight). This aspect will be\
          \ conveyed by the costName."
  tapi.topology.CostCharacteristicWrapper:
    properties:
      cost-characteristic:
        $ref: "#/definitions/tapi.topology.CostCharacteristic"
  tapi.topology.ForwardingRule:
    type: "string"
    enum:
    - "MAY_FORWARD_ACROSS_GROUP"
    - "MUST_FORWARD_ACROSS_GROUP"
    - "CANNOT_FORWARD_ACROSS_GROUP"
    - "NO_STATEMENT_ON_FORWARDING"
    - "INTER_CONNECTION_CONTENTION"
  tapi.topology.GetLinkDetails:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.topology.getlinkdetails.Output"
  tapi.topology.GetNodeDetails:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.topology.getnodedetails.Output"
  tapi.topology.GetNodeEdgePointDetails:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.topology.getnodeedgepointdetails.Output"
  tapi.topology.GetTopologyDetails:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.topology.gettopologydetails.Output"
  tapi.topology.GetTopologyList:
    type: "object"
    properties:
      output:
        $ref: "#/definitions/tapi.topology.gettopologylist.Output"
  tapi.topology.InterRuleGroup:
    allOf:
    - $ref: "#/definitions/tapi.common.CapacityPac"
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - $ref: "#/definitions/tapi.topology.RiskParameterPac"
    - $ref: "#/definitions/tapi.topology.TransferCostPac"
    - $ref: "#/definitions/tapi.topology.TransferTimingPac"
    - type: "object"
      properties:
        associated-node-rule-group:
          type: "array"
          description: "The NodeRuleGroups that the InterRuleGroup constrains interconnection\
            \ between.\r\n                The CEPs of the NEPs of a referenced NodeRuleGroup\
            \ can interconnect to the CEPs of the NEPs of another referenced NodeRuleGroup\
            \ constrained by the rules of the InterRuleGroup."
          items:
            $ref: "#/definitions/tapi.topology.NodeRuleGroupRef"
        rule:
          type: "array"
          description: "The list of rules of the InterRuleGroup."
          items:
            $ref: "#/definitions/tapi.topology.Rule"
      description: "Rules that apply between groups of NodeEdgePoint (NEP) instances."
  tapi.topology.InterRuleGroupWrapper:
    properties:
      inter-rule-group:
        $ref: "#/definitions/tapi.topology.InterRuleGroup"
  tapi.topology.LatencyCharacteristic:
    type: "object"
    properties:
      traffic-property-name:
        type: "string"
        description: "The identifier of the specific traffic property to which the\
          \ queuing latency applies."
      jitter-characteristic:
        type: "string"
        description: "High frequency deviation from true periodicity of a signal and\
          \ therefore a small high rate of change of transfer latency.\r\n       \
          \         Applies to TDM systems (and not packet)."
      fixed-latency-characteristic:
        type: "string"
        description: "A topological entity suffers delay caused by the realization\
          \ of the servers (e.g. distance related; FEC encoding etc.) along with some\
          \ client specific processing.\r\n                This is the total average\
          \ latency effect of the topological entity."
      wander-characteristic:
        type: "string"
        description: "Low frequency deviation from true periodicity of a signal and\
          \ therefore a small low rate of change of transfer latency.\r\n        \
          \        Applies to TDM systems (and not packet)."
      queing-latency-characteristic:
        type: "string"
        description: "The specific queuing latency for the traffic property."
  tapi.topology.LatencyCharacteristicWrapper:
    properties:
      latency-characteristic:
        $ref: "#/definitions/tapi.topology.LatencyCharacteristic"
  tapi.topology.LayerProtocolTransitionPac:
    type: "object"
    properties:
      transitioned-layer-protocol-name:
        type: "array"
        description: "Provides the ordered structure of layer protocol transitions\
          \ encapsulated in the Link.\r\n                The list starts with the\
          \ client side as the first entry and includes all layer-protocol names (hence\
          \ the smallest number is 2 as otherwise the Link is not transitional).\r\
          \n                The ordering relates also to the (conceptual) port role\
          \ (which emphasizes the orientation)."
        items:
          type: "string"
  tapi.topology.Link:
    allOf:
    - $ref: "#/definitions/tapi.common.AdminStatePac"
    - $ref: "#/definitions/tapi.common.CapacityPac"
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - $ref: "#/definitions/tapi.topology.LayerProtocolTransitionPac"
    - $ref: "#/definitions/tapi.topology.RiskParameterPac"
    - $ref: "#/definitions/tapi.topology.TransferCostPac"
    - $ref: "#/definitions/tapi.topology.TransferIntegrityPac"
    - $ref: "#/definitions/tapi.topology.TransferTimingPac"
    - $ref: "#/definitions/tapi.topology.ValidationPac"
    - type: "object"
      properties:
        layer-protocol-name:
          type: "array"
          description: "The layer protocol of the Link."
          items:
            $ref: "#/definitions/tapi.common.LayerProtocolName"
        resilience-type:
          description: "The underlying resilience type of the Link."
          $ref: "#/definitions/tapi.topology.ResilienceType"
        node-edge-point:
          type: "array"
          description: "The NEPs connected by the Link."
          items:
            $ref: "#/definitions/tapi.topology.NodeEdgePointRef"
        direction:
          description: "The directionality of the Link.\r\n                Is applicable\
            \ to simple Links where all (conceptual) ports are BIDIRECTIONAL (the\
            \ Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL).\r\
            \n                Is not present in more complex cases."
          $ref: "#/definitions/tapi.common.ForwardingDirection"
      description: "A Link is a topological entity which is an abstract representation\
        \ of the effective adjacency between two or more Node instances (specifically\
        \ NodeEdgePoint instances) in a Topology."
  tapi.topology.NepLayerProtocolCapability:
    type: "object"
    properties:
      layer-protocol-qualifier:
        type: "string"
        description: "The layer protocol qualifier value."
      number-of-cep-instances:
        type: "integer"
        format: "int32"
        description: "The number of CEP instances."
  tapi.topology.NepLayerProtocolCapabilityWrapper:
    properties:
      available-cep-layer-protocol:
        $ref: "#/definitions/tapi.topology.NepLayerProtocolCapability"
  tapi.topology.NetworkTopologyService:
    allOf:
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - type: "object"
      properties:
        topology:
          type: "array"
          description: "The Topology instance(s) tracking the state of the allocated\
            \ resources for the support of the NetworkTopologyService."
          items:
            $ref: "#/definitions/tapi.topology.TopologyRef"
      description: "A NetworkTopologyService represents an 'intent-like' request for\
        \ topology related provisioning, for future developments.\r\n            The\
        \ NetworkTopologyService is a container for topology request details and is\
        \ distinct from the Topology that realize the request."
  tapi.topology.NetworkTopologyServiceWrapper:
    properties:
      nw-topology-service:
        $ref: "#/definitions/tapi.topology.NetworkTopologyService"
  tapi.topology.Node:
    allOf:
    - $ref: "#/definitions/tapi.common.AdminStatePac"
    - $ref: "#/definitions/tapi.common.CapacityPac"
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - $ref: "#/definitions/tapi.topology.TransferCostPac"
    - $ref: "#/definitions/tapi.topology.TransferIntegrityPac"
    - $ref: "#/definitions/tapi.topology.TransferTimingPac"
    - type: "object"
      properties:
        layer-protocol-name:
          type: "array"
          description: "The layer protocol(s) of the (multi-layer) Node."
          items:
            $ref: "#/definitions/tapi.common.LayerProtocolName"
        encap-topology:
          description: "A Node may encapsulate one Topology instance, which in turn\
            \ encompasses Nodes at lower partitioning level."
          $ref: "#/definitions/tapi.topology.TopologyRef"
        owned-node-edge-point:
          type: "array"
          description: "The NEPs belonging to / owned by this Node.\r\n          \
            \      By convention, only the Node instances at the lowest partitioning\
            \ level 'own' the NEPs.\r\n                In other words, each and every\
            \ NEP instance is owned by a Node at the lowest partitioning level."
          items:
            $ref: "#/definitions/tapi.topology.NodeEdgePoint"
        node-rule-group:
          type: "array"
          description: "The Node rules applicable to this Node."
          items:
            $ref: "#/definitions/tapi.topology.NodeRuleGroup"
        aggregated-node-edge-point:
          type: "array"
          description: "The NEPs aggregated by this Node.\r\n                By convention,\
            \ only the Node instances which are not at the lowest partitioning level\
            \ 'aggregate' the NEPs.\r\n                In other words, each and every\
            \ NEP instance is owned by a Node at the lowest partitioning level. A\
            \ subset of NEP instances may be aggregated by Nodes at higher partitioning\
            \ levels."
          items:
            $ref: "#/definitions/tapi.topology.NodeEdgePointRef"
      description: "The Node is a topological entity which is an abstract representation\
        \ of the forwarding capabilities (of transport characteristic information)\
        \ of a particular set of network resources.\r\n            It is described\
        \ in terms of the aggregation of set of ports (NodeEdgePoint) belonging to\
        \ those network resources and the potential to enable forwarding of information\
        \ between those edge ports.\r\n            At the lowest level of recursion,\
        \ a Node may represent a switch matrix (i.e., a fabric) in an equipment."
  tapi.topology.NodeEdgePoint:
    allOf:
    - $ref: "#/definitions/tapi.common.AdminStatePac"
    - $ref: "#/definitions/tapi.common.CapacityPac"
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - $ref: "#/definitions/tapi.common.TerminationPac"
    - type: "object"
      properties:
        link-port-role:
          description: "The role of the (conceptual) port of the associated Link."
          $ref: "#/definitions/tapi.common.PortRole"
        mapped-service-interface-point:
          type: "array"
          description: "A NodeEdgePoint (NEP) may be associated to a ServiceInterfacePoint\
            \ (SIP), i.e. when the NEP is the resource oriented view of a SIP.\r\n\
            \                NEP mapped to more than one SIP (slicing/virtualizing)\
            \ or a SIP mapped to more than one NEP (load balancing/resilience) should\
            \ be considered experimental."
          items:
            $ref: "#/definitions/tapi.common.ServiceInterfacePointRef"
        available-cep-layer-protocol:
          type: "array"
          description: "The potentially supported protocols and flows.\r\n       \
            \         In ITU-T terms, the potentially supported adaptation and termination\
            \ functions. "
          items:
            $ref: "#/definitions/tapi.topology.NepLayerProtocolCapability"
        aggregated-node-edge-point:
          type: "array"
          description: "A NodeEdgePoint (NEP) instance may aggregate one or more other\
            \ NEP instances for e.g. pooling purposes, when a set of NEP instances\
            \ are equivalent for usage."
          items:
            $ref: "#/definitions/tapi.topology.NodeEdgePointRef"
        layer-protocol-name:
          description: "The layer protocol of the NodeEdgePoint (NEP)."
          $ref: "#/definitions/tapi.common.LayerProtocolName"
        link-port-direction:
          description: "The orientation of flow at the (conceptual) port of the associated\
            \ Link."
          $ref: "#/definitions/tapi.common.PortDirection"
      description: "The NodeEdgePoint (NEP) is a topological entity which represents\
        \ the ingress-egress edge-port functions that access the forwarding capabilities\
        \ provided by the Node.\r\n            Hence it provides an encapsulation\
        \ of addressing, mapping, termination, adaptation and OAM functions of one\
        \ or more transport layers (including circuit and packet forms) performed\
        \ at the entry and exit points of the Node."
  tapi.topology.NodeEdgePointRef:
    allOf:
    - $ref: "#/definitions/tapi.topology.NodeRef"
    - type: "object"
      properties:
        node-edge-point-uuid:
          type: "string"
          description: "none"
          x-path: "/tapi-common:context/tapi-topology:topology-context/tapi-topology:topology/tapi-topology:node/tapi-topology:owned-node-edge-point/tapi-topology:uuid"
      description: "none"
  tapi.topology.NodeEdgePointRefWrapper:
    properties:
      boundary-node-edge-point:
        $ref: "#/definitions/tapi.topology.NodeEdgePointRef"
  tapi.topology.NodeRef:
    allOf:
    - $ref: "#/definitions/tapi.topology.TopologyRef"
    - type: "object"
      properties:
        node-uuid:
          type: "string"
          description: "none"
          x-path: "/tapi-common:context/tapi-topology:topology-context/tapi-topology:topology/tapi-topology:node/tapi-topology:uuid"
      description: "none"
  tapi.topology.NodeRuleGroup:
    allOf:
    - $ref: "#/definitions/tapi.common.CapacityPac"
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - $ref: "#/definitions/tapi.topology.RiskParameterPac"
    - $ref: "#/definitions/tapi.topology.TransferCostPac"
    - $ref: "#/definitions/tapi.topology.TransferTimingPac"
    - type: "object"
      properties:
        inter-rule-group:
          type: "array"
          description: "Nested NodeRuleGroups may have InterRuleGroups. The Superior\
            \ NodeRuleGroup contains the nested NodeRuleGroups and their associated\
            \ InterRuleGroups.\r\n                This is equivalent to the Node-Topology\
            \ hierarchy."
          items:
            $ref: "#/definitions/tapi.topology.InterRuleGroup"
        rule:
          type: "array"
          description: "The list of rules of the NodeRuleGroup."
          items:
            $ref: "#/definitions/tapi.topology.Rule"
        composed-rule-group:
          type: "array"
          description: "NodeRuleGroups may be nested such that finer grained rules\
            \ may be applied.\r\n                A nested rule group should have a\
            \ subset of the NEPs of the superior rule group."
          items:
            $ref: "#/definitions/tapi.topology.NodeRuleGroupRef"
        node-edge-point:
          type: "array"
          description: "NEPs and their client CEPs that the rules apply to."
          items:
            $ref: "#/definitions/tapi.topology.NodeEdgePointRef"
      description: "Rules that apply to a group of NodeEdgePoint (NEP) instances."
  tapi.topology.NodeRuleGroupRef:
    allOf:
    - $ref: "#/definitions/tapi.topology.NodeRef"
    - type: "object"
      properties:
        node-rule-group-uuid:
          type: "string"
          description: "none"
          x-path: "/tapi-common:context/tapi-topology:topology-context/tapi-topology:topology/tapi-topology:node/tapi-topology:node-rule-group/tapi-topology:uuid"
      description: "none"
  tapi.topology.NodeRuleGroupRefWrapper:
    properties:
      composed-rule-group:
        $ref: "#/definitions/tapi.topology.NodeRuleGroupRef"
  tapi.topology.NodeRuleGroupWrapper:
    properties:
      node-rule-group:
        $ref: "#/definitions/tapi.topology.NodeRuleGroup"
  tapi.topology.PortRoleRule:
    type: "object"
    properties:
      port-role-rule:
        type: "array"
        description: "Where the rule references more than one (conceptual) port role\
          \ or where there are rule intersections either as a result of overlay of\
          \ rules or InterRuleGroup usage indicates role matching criteria for a Connection\
          \ following the rules.\r\n                For example if two port roles,\
          \ 'a' and 'b', are listed and the port role rule is 'different', this means\
          \ that a Connection connecting CEPs in that group must have port roles that\
          \ are different for each CEP in that group.\r\n                In the example\
          \ if a Connection can have n ports of role 'a' and m ports of role 'b' then\
          \ a maximum of two ports can be drawn from the NEPs of the group and where\
          \ there are two, one must be role 'a' and one must be role 'b'."
        items:
          type: "string"
      port-role:
        type: "array"
        description: "The role(s) of the port(s) considered in the rule."
        items:
          type: "string"
  tapi.topology.PortRoleRuleWrapper:
    properties:
      cep-port-role:
        $ref: "#/definitions/tapi.topology.PortRoleRule"
  tapi.topology.ProtectionType:
    type: "string"
    enum:
    - "NO_PROTECTION"
    - "ONE_PLUS_ONE_PROTECTION"
    - "ONE_PLUS_ONE_PROTECTION_WITH_DYNAMIC_RESTORATION"
    - "PERMANENT_ONE_PLUS_ONE_PROTECTION"
    - "ONE_FOR_ONE_PROTECTION"
    - "DYNAMIC_RESTORATION"
    - "PRE_COMPUTED_RESTORATION"
    - "ONE_PLUS_ONE_PROTECTION_WITH_PRE_COMPUTED_RESTORATION"
    - "ONE_FOR_N_PROTECTION"
    - "M_FOR_N_PROTECTION"
    - "ONE_FOR_ONE_BY_N"
  tapi.topology.ResilienceType:
    type: "object"
    properties:
      restoration-policy:
        description: "The restoration policy."
        $ref: "#/definitions/tapi.topology.RestorationPolicy"
      protection-type:
        description: "The protection type."
        $ref: "#/definitions/tapi.topology.ProtectionType"
  tapi.topology.ResilienceTypeWrapper:
    properties:
      resilience-type:
        $ref: "#/definitions/tapi.topology.ResilienceType"
  tapi.topology.RestorationPolicy:
    type: "string"
    enum:
    - "PER_DOMAIN_RESTORATION"
    - "END_TO_END_RESTORATION"
    - "NA"
  tapi.topology.RiskCharacteristic:
    type: "object"
    properties:
      risk-characteristic-name:
        type: "string"
        description: "The name of the risk characteristic. The characteristic may\
          \ be related to a specific degree of closeness. \r\n                For\
          \ example a particular characteristic may apply to failures that are localized\
          \ (e.g. to one side of a road) where as another characteristic may relate\
          \ to failures that have a broader impact (e.g. both sides of a road that\
          \ crosses a bridge).\r\n                Depending upon the importance of\
          \ the traffic being routed different risk characteristics will be evaluated."
      risk-identifier-list:
        type: "array"
        description: "A list of the identifiers of each physical/geographic unit (with\
          \ the specific risk characteristic) that is related to a segment of the\
          \ topological entity."
        items:
          type: "string"
  tapi.topology.RiskCharacteristicWrapper:
    properties:
      risk-characteristic:
        $ref: "#/definitions/tapi.topology.RiskCharacteristic"
  tapi.topology.RiskParameterPac:
    type: "object"
    properties:
      risk-characteristic:
        type: "array"
        description: "A list of risk characteristics for consideration in an analysis\
          \ of shared risk. Each element of the list represents a specific risk consideration."
        items:
          $ref: "#/definitions/tapi.topology.RiskCharacteristic"
  tapi.topology.Rule:
    allOf:
    - $ref: "#/definitions/tapi.common.LocalClass"
    - type: "object"
      properties:
        complex-rule:
          type: "array"
          description: "Allows for more complex rules where the basic rule system\
            \ is not sufficient."
          items:
            type: "string"
        rule-type:
          description: "The focus of the rule."
          $ref: "#/definitions/tapi.topology.RuleType"
        signal-property:
          description: "The rule only applies to signals with the properties listed.\
            \ \r\n                If the attribute is not present then the rule applies\
            \ to all signals."
          $ref: "#/definitions/tapi.topology.SignalPropertyRule"
        connection-spec-reference:
          type: "array"
          description: "Identifies the type of Connection that the rule applies to.\
            \ \r\n                If the attribute is not present then the rule applies\
            \ to all types of Connection supported by the device."
          items:
            $ref: "#/definitions/tapi.topology.ConnectionSpecReference"
        cep-port-role:
          type: "array"
          description: "Indicates the port role to which the rule applies. \r\n  \
            \              The port role is interpreted in the context of the connection\
            \ type which is identified by the connection spec, if any.\r\n       \
            \         The port role is not meaningful in the absence of a connection\
            \ spec reference.\r\n                If a NodeRuleGroup carries a port\
            \ role, that role applies also to the associated InterRuleGroup where\
            \ the combination of the roles in the NodeRuleGroups at the ends of the\
            \ InterGroupRule define the Connection orientation.\r\n              \
            \  For example a root-and-leaf Connection may be used in a Node where\
            \ a NodeRuleGroup collects one set of NEPs has the port role 'root' and\
            \ another NodeRuleGroup collects another set of NEPs has the port role\
            \ 'leaf' where these are joined by an InterRuleGroup.\r\n            \
            \    This combination specifies an allowed orientation of the root-and-leaf\
            \ Connection.\r\n                No port role statement means all port\
            \ roles are allowed."
          items:
            $ref: "#/definitions/tapi.topology.PortRoleRule"
        cep-direction:
          type: "array"
          description: "The list of CEP directions that the rule applies to, where\
            \ the CEP direction is the orientation of flow at the (conceptual) port\
            \ of the associated Connection.\r\n                No entry means all\
            \ CEP directions."
          items:
            $ref: "#/definitions/tapi.common.PortDirection"
        override-priority:
          type: "integer"
          format: "int32"
          description: "The overridePriority allows for one rule in a rule group to\
            \ override another.\r\n                Priority n rules override priority\
            \ n+1 rules.\r\n                Rules of the same priority override as\
            \ follows (n overrides n+1):\r\n                1 - MustNot,\r\n     \
            \           2 - Must,\r\n                3 - May,\r\n                4\
            \ - Null.\r\n                Within a rule the flexibility rules (signal,\
            \ port role...) override as follows (n overrides n+1):\r\n           \
            \     1 - Any,\r\n                2 - Same,\r\n                3 - Different.\r\
            \n                Where there are two or more 'Same' rules, they will\
            \ form an intersection where all must be met.\r\n                "
        layer-protocol-qualifier:
          type: "array"
          description: "Qualifies a rule for a particular layer protocol identifying\
            \ the qualifiers that the rule applies to.\r\n                If the attribute\
            \ is not present then the rule applies to all relevant qualifiers of the\
            \ layer protocol of the parent entity."
          items:
            type: "string"
        forwarding-rule:
          description: "Rule that restricts the creation/deletion of a Connection\
            \ between points in the NodeRuleGroup or related by the InterRuleGroup\
            \ between NodeRuleGroups."
          $ref: "#/definitions/tapi.topology.ForwardingRule"
      description: "Single complex rule statement.\r\n            A Node with no rule\
        \ group has no restrictions and is essentially May/Any.\r\n            A NodeRuleGroup\
        \ constrains the CEP connectability in the Node.\r\n            A Connection\
        \ from a CEP/NEP must abide by all rules that relate to that CEP/NEP.\r\n\
        \            Rules that are for a particular layerProtocolQualifier, connectionSpecReference,\
        \ cepPortRole and cepDirection combination must be abided by in combination\
        \ as dictated by overridePriority.\r\n            If a particular connectionSpecReference\
        \ does not have any rule statements then it is not supported and connections\
        \ of that type are not possible within the rule group.\r\n            If a\
        \ particular cepPortRole of a particular connectionSpecReference does not\
        \ have any rule statements then it is not supported and connections of that\
        \ connectionSpecReference (type) cannot have that cepPortRole for CEPs from\
        \ NEPs in that rule group.\r\n            If a particular cepDirection for\
        \ a particular connectionSpecReference does not have any rule statements then\
        \ it is not supported and connections of that connectionSpecReference (type)\
        \ cannot have that cepPortDirection for CEPs from NEPs in that rule group.\r\
        \n            Rules that are for different layerProtocolQualifiers or connectionSpecReferences\
        \ are independent and provide options for Connection in the NodeRuleGroup.\r\
        \n            Some rules may apply to multiple connectionSpecReferences and\
        \ all cepPortRoles and all cepDirections."
  tapi.topology.RuleType:
    type: "string"
    enum:
    - "FORWARDING"
    - "CAPACITY"
    - "COST"
    - "TIMING"
    - "RISK"
    - "GROUPING"
  tapi.topology.RuleWrapper:
    properties:
      rule:
        $ref: "#/definitions/tapi.topology.Rule"
  tapi.topology.SignalPropertyRule:
    type: "object"
    properties:
      number-of-signal-values:
        type: "integer"
        format: "int32"
        description: "The number of instances of this specific property that can be\
          \ supported by the group."
      applicable-signal-value:
        type: "array"
        description: "Specific values of the signal property to which the rule applies."
        items:
          type: "string"
      signal-property-value-rule:
        type: "string"
        description: "Indicates how the signal properties should be accounted for."
      signal-property-name:
        type: "string"
        description: "The name of the signal property to which the rule applies."
  tapi.topology.SignalPropertyRuleWrapper:
    properties:
      signal-property:
        $ref: "#/definitions/tapi.topology.SignalPropertyRule"
  tapi.topology.Topology:
    allOf:
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - type: "object"
      properties:
        layer-protocol-name:
          type: "array"
          description: "The layer protocol(s) of the (multi-layer) Topology."
          items:
            $ref: "#/definitions/tapi.common.LayerProtocolName"
        link:
          type: "array"
          description: "The list of Links which the Topology encompass."
          items:
            $ref: "#/definitions/tapi.topology.Link"
        node:
          type: "array"
          description: "The list of Nodes which the Topology encompass."
          items:
            $ref: "#/definitions/tapi.topology.Node"
        boundary-node-edge-point:
          type: "array"
          description: "This list is applicable only in case of a 'top' Topology (i.e.\
            \ a Topology which is not encapsulated in a Node) which does not encompass\
            \ a single Node.\r\n                In this case, the list identifies\
            \ the NEPs which are at the boundary of the Topology, which can be a subset\
            \ of all the NEPs belonging to encompassed Nodes.\r\n                It\
            \ is expected that these boundary NEPs have an associated SIP to allow\
            \ the provisioning of ConnectivityServices spanning the whole Topology."
          items:
            $ref: "#/definitions/tapi.topology.NodeEdgePointRef"
      description: "The Topology is an abstract representation of the topological\
        \ aspects of a particular set of network resources. It is described in terms\
        \ of the underlying topological network of Node and Link instances that enable\
        \ the forwarding capabilities of that particular set of network resources."
  tapi.topology.TopologyContext:
    type: "object"
    properties:
      nw-topology-service:
        description: "The defined operations."
        $ref: "#/definitions/tapi.topology.NetworkTopologyService"
      topology:
        type: "array"
        description: "The included Topology instances."
        items:
          $ref: "#/definitions/tapi.topology.Topology"
  tapi.topology.TopologyContextWrapper:
    properties:
      tapi-topology:topology-context:
        $ref: "#/definitions/tapi.topology.TopologyContext"
  tapi.topology.TopologyRef:
    type: "object"
    properties:
      topology-uuid:
        type: "string"
        description: "none"
        x-path: "/tapi-common:context/tapi-topology:topology-context/tapi-topology:topology/tapi-topology:uuid"
  tapi.topology.TopologyRefWrapper:
    properties:
      topology:
        $ref: "#/definitions/tapi.topology.TopologyRef"
  tapi.topology.TransferCostPac:
    type: "object"
    properties:
      cost-characteristic:
        type: "array"
        description: "The list of costs where each cost relates to some aspect of\
          \ the topological entity."
        items:
          $ref: "#/definitions/tapi.topology.CostCharacteristic"
  tapi.topology.TransferIntegrityPac:
    type: "object"
    properties:
      error-characteristic:
        type: "string"
        description: "Describes the degree to which the signal propagated can be errored.\
          \ \r\n                Applies to TDM systems as the errored signal will\
          \ be propagated and not to packet as errored packets will be discarded."
      unavailable-time-characteristic:
        type: "string"
        description: "Describes the duration for which there may be no valid signal\
          \ propagated."
      server-integrity-process-characteristic:
        type: "string"
        description: "Describes the effect of any server integrity enhancement process\
          \ on the characteristics of the topological entity."
      delivery-order-characteristic:
        type: "string"
        description: "Describes the degree to which packets will be delivered out\
          \ of sequence.\r\n                Does not apply to TDM as the TDM protocols\
          \ maintain strict order."
      repeat-delivery-characteristic:
        type: "string"
        description: "Primarily applies to packet systems where a packet may be delivered\
          \ more than once (in fault recovery for example). \r\n                It\
          \ can also apply to TDM where several frames may be received twice due to\
          \ switching in a system with a large differential propagation delay."
      loss-characteristic:
        type: "string"
        description: "Describes the acceptable characteristic of lost packets where\
          \ loss may result from discard due to errors or overflow.\r\n          \
          \      Applies to packet systems and not to TDM (as for TDM errored signals\
          \ are propagated unless grossly errored and overflow/underflow turns into\
          \ timing slips)."
  tapi.topology.TransferTimingPac:
    type: "object"
    properties:
      latency-characteristic:
        type: "array"
        description: "The effect on the latency of a queuing process. This only has\
          \ significant effect for packet based systems and has a complex characteristic."
        items:
          $ref: "#/definitions/tapi.topology.LatencyCharacteristic"
  tapi.topology.ValidationMechanism:
    type: "object"
    properties:
      layer-protocol-adjacency-validated:
        type: "string"
        description: "State of validation."
      validation-mechanism:
        type: "string"
        description: "Name of mechanism used to validate adjacency."
      validation-robustness:
        type: "string"
        description: "Quality of validation (i.e. how likely is the stated validation\
          \ to be invalid)."
  tapi.topology.ValidationMechanismWrapper:
    properties:
      validation-mechanism:
        $ref: "#/definitions/tapi.topology.ValidationMechanism"
  tapi.topology.ValidationPac:
    type: "object"
    properties:
      validation-mechanism:
        type: "array"
        description: "Provides details of the specific validation mechanism(s) used\
          \ to confirm the presence of an intended topological entity."
        items:
          $ref: "#/definitions/tapi.topology.ValidationMechanism"
  tapi.topology.getlinkdetails.Input:
    type: "object"
    properties:
      link-id:
        type: "string"
        description: "UUID of the Link instance.\r\n                    UUID: An identifier\
          \ that is universally unique within an identifier space, where the identifier\
          \ space is itself globally unique, and immutable.\r\n                  \
          \  An UUID carries no semantics with respect to the purpose or state of\
          \ the entity.\r\n                    UUID here uses string representation\
          \ as defined in RFC 4122.  The canonical representation uses lowercase characters.\r\
          \n                    Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-'\
          \ + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \r\n                    Example of a\
          \ UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
      topology-id:
        type: "string"
        description: "UUID of the parent Topology instance.\r\n                  \
          \  UUID: An identifier that is universally unique within an identifier space,\
          \ where the identifier space is itself globally unique, and immutable.\r\
          \n                    An UUID carries no semantics with respect to the purpose\
          \ or state of the entity.\r\n                    UUID here uses string representation\
          \ as defined in RFC 4122.  The canonical representation uses lowercase characters.\r\
          \n                    Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-'\
          \ + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \r\n                    Example of a\
          \ UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
  tapi.topology.getlinkdetails.Output:
    type: "object"
    properties:
      link:
        description: "The requested Link instance."
        $ref: "#/definitions/tapi.topology.Link"
  tapi.topology.getnodedetails.Input:
    type: "object"
    properties:
      node-id:
        type: "string"
        description: "UUID of the Node instance.\r\n                    UUID: An identifier\
          \ that is universally unique within an identifier space, where the identifier\
          \ space is itself globally unique, and immutable.\r\n                  \
          \  An UUID carries no semantics with respect to the purpose or state of\
          \ the entity.\r\n                    UUID here uses string representation\
          \ as defined in RFC 4122.  The canonical representation uses lowercase characters.\r\
          \n                    Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-'\
          \ + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \r\n                    Example of a\
          \ UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
      topology-id:
        type: "string"
        description: "UUID of the parent Topology instance.\r\n                  \
          \  UUID: An identifier that is universally unique within an identifier space,\
          \ where the identifier space is itself globally unique, and immutable.\r\
          \n                    An UUID carries no semantics with respect to the purpose\
          \ or state of the entity.\r\n                    UUID here uses string representation\
          \ as defined in RFC 4122.  The canonical representation uses lowercase characters.\r\
          \n                    Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-'\
          \ + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \r\n                    Example of a\
          \ UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
  tapi.topology.getnodedetails.Output:
    type: "object"
    properties:
      node:
        description: "The requested Node instance."
        $ref: "#/definitions/tapi.topology.Node"
  tapi.topology.getnodeedgepointdetails.Input:
    type: "object"
    properties:
      node-id:
        type: "string"
        description: "UUID of the parent Node instance.\r\n                    UUID:\
          \ An identifier that is universally unique within an identifier space, where\
          \ the identifier space is itself globally unique, and immutable.\r\n   \
          \                 An UUID carries no semantics with respect to the purpose\
          \ or state of the entity.\r\n                    UUID here uses string representation\
          \ as defined in RFC 4122.  The canonical representation uses lowercase characters.\r\
          \n                    Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-'\
          \ + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \r\n                    Example of a\
          \ UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
      topology-id:
        type: "string"
        description: "UUID of the parent Node's Topology instance.\r\n           \
          \         UUID: An identifier that is universally unique within an identifier\
          \ space, where the identifier space is itself globally unique, and immutable.\r\
          \n                    An UUID carries no semantics with respect to the purpose\
          \ or state of the entity.\r\n                    UUID here uses string representation\
          \ as defined in RFC 4122.  The canonical representation uses lowercase characters.\r\
          \n                    Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-'\
          \ + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \r\n                    Example of a\
          \ UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
      node-edge-point-id:
        type: "string"
        description: "UUID of the NodeEdgePoint (NEP) instance.\r\n              \
          \      UUID: An identifier that is universally unique within an identifier\
          \ space, where the identifier space is itself globally unique, and immutable.\r\
          \n                    An UUID carries no semantics with respect to the purpose\
          \ or state of the entity.\r\n                    UUID here uses string representation\
          \ as defined in RFC 4122.  The canonical representation uses lowercase characters.\r\
          \n                    Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-'\
          \ + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \r\n                    Example of a\
          \ UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
  tapi.topology.getnodeedgepointdetails.Output:
    type: "object"
    properties:
      node-edge-point:
        description: "The requested NodeEdgePoint (NEP) instance."
        $ref: "#/definitions/tapi.topology.NodeEdgePoint"
  tapi.topology.gettopologydetails.Input:
    type: "object"
    properties:
      topology-id:
        type: "string"
        description: "UUID of the Topology instance.\r\n                    UUID:\
          \ An identifier that is universally unique within an identifier space, where\
          \ the identifier space is itself globally unique, and immutable.\r\n   \
          \                 An UUID carries no semantics with respect to the purpose\
          \ or state of the entity.\r\n                    UUID here uses string representation\
          \ as defined in RFC 4122.  The canonical representation uses lowercase characters.\r\
          \n                    Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-'\
          \ + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \r\n                    Example of a\
          \ UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
  tapi.topology.gettopologydetails.Output:
    type: "object"
    properties:
      topology:
        description: "The requested Topology instance."
        $ref: "#/definitions/tapi.topology.Topology"
  tapi.topology.gettopologylist.Output:
    type: "object"
    properties:
      topology:
        type: "array"
        description: "The requested list of Topology instances."
        items:
          $ref: "#/definitions/tapi.topology.Topology"
  tapi.topology.node.OwnedNodeEdgePoint:
    allOf:
    - $ref: "#/definitions/tapi.equipment.OwnedNodeEdgePointAugmentation1"
    - $ref: "#/definitions/tapi.topology.NodeEdgePoint"
  tapi.topology.node.OwnedNodeEdgePointWrapper:
    properties:
      owned-node-edge-point:
        $ref: "#/definitions/tapi.topology.node.OwnedNodeEdgePoint"
  tapi.topology.topology.Link:
    allOf:
    - $ref: "#/definitions/tapi.equipment.LinkAugmentation1"
    - $ref: "#/definitions/tapi.topology.Link"
  tapi.topology.topology.LinkWrapper:
    properties:
      link:
        $ref: "#/definitions/tapi.topology.topology.Link"
  tapi.topology.topology.Node:
    allOf:
    - $ref: "#/definitions/tapi.common.AdminStatePac"
    - $ref: "#/definitions/tapi.common.CapacityPac"
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - $ref: "#/definitions/tapi.topology.TransferCostPac"
    - $ref: "#/definitions/tapi.topology.TransferIntegrityPac"
    - $ref: "#/definitions/tapi.topology.TransferTimingPac"
    - type: "object"
      properties:
        layer-protocol-name:
          type: "array"
          description: "The layer protocol(s) of the (multi-layer) Node."
          items:
            $ref: "#/definitions/tapi.common.LayerProtocolName"
        encap-topology:
          description: "A Node may encapsulate one Topology instance, which in turn\
            \ encompasses Nodes at lower partitioning level."
          $ref: "#/definitions/tapi.topology.TopologyRef"
        owned-node-edge-point:
          type: "array"
          description: "The NEPs belonging to / owned by this Node.\r\n          \
            \      By convention, only the Node instances at the lowest partitioning\
            \ level 'own' the NEPs.\r\n                In other words, each and every\
            \ NEP instance is owned by a Node at the lowest partitioning level."
          items:
            $ref: "#/definitions/tapi.topology.node.OwnedNodeEdgePoint"
        node-rule-group:
          type: "array"
          description: "The Node rules applicable to this Node."
          items:
            $ref: "#/definitions/tapi.topology.NodeRuleGroup"
        aggregated-node-edge-point:
          type: "array"
          description: "The NEPs aggregated by this Node.\r\n                By convention,\
            \ only the Node instances which are not at the lowest partitioning level\
            \ 'aggregate' the NEPs.\r\n                In other words, each and every\
            \ NEP instance is owned by a Node at the lowest partitioning level. A\
            \ subset of NEP instances may be aggregated by Nodes at higher partitioning\
            \ levels."
          items:
            $ref: "#/definitions/tapi.topology.NodeEdgePointRef"
      description: "The list of Nodes which the Topology encompass."
  tapi.topology.topology.NodeWrapper:
    properties:
      node:
        $ref: "#/definitions/tapi.topology.topology.Node"
  tapi.topology.topologycontext.Topology:
    allOf:
    - $ref: "#/definitions/tapi.common.GlobalClass"
    - type: "object"
      properties:
        layer-protocol-name:
          type: "array"
          description: "The layer protocol(s) of the (multi-layer) Topology."
          items:
            $ref: "#/definitions/tapi.common.LayerProtocolName"
        link:
          type: "array"
          description: "The list of Links which the Topology encompass."
          items:
            $ref: "#/definitions/tapi.topology.topology.Link"
        node:
          type: "array"
          description: "The list of Nodes which the Topology encompass."
          items:
            $ref: "#/definitions/tapi.topology.topology.Node"
        boundary-node-edge-point:
          type: "array"
          description: "This list is applicable only in case of a 'top' Topology (i.e.\
            \ a Topology which is not encapsulated in a Node) which does not encompass\
            \ a single Node.\r\n                In this case, the list identifies\
            \ the NEPs which are at the boundary of the Topology, which can be a subset\
            \ of all the NEPs belonging to encompassed Nodes.\r\n                It\
            \ is expected that these boundary NEPs have an associated SIP to allow\
            \ the provisioning of ConnectivityServices spanning the whole Topology."
          items:
            $ref: "#/definitions/tapi.topology.NodeEdgePointRef"
      description: "The included Topology instances."
  tapi.topology.topologycontext.TopologyWrapper:
    properties:
      topology:
        $ref: "#/definitions/tapi.topology.topologycontext.Topology"
