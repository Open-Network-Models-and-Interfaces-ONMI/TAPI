
module: tapi-streaming
  augment /tapi-common:context:
    +--rw stream-admin-context {tapi-streaming-admin}?
       +--ro stream-monitor* [uuid] {note-that-this-may-be-an-empty-list}?
       |  +--ro available-stream
       |  |  +--ro available-stream-uuid?   -> /tapi-common:context/tapi-streaming:stream-context/available-stream/uuid
       |  +--ro client-id?             string
       |  +--ro client-address?        string
       |  +--ro dynamic-stream-data {mandatory-where-dynamic-data-is-to-be-reported}?
       |  |  +--ro id-of-last-record-written-to-log?   string {mandatory-where-the-most-recent-record-written-is-being-recorded}?
       |  |  +--ro id-of-last-record-read-from-log?    string {mandatory-where-last-record-read-is-being-recorded}?
       |  |  +--ro last-updated?                       tapi-common:date-and-time
       |  +--ro uuid                   uuid
       |  +--ro name* [value-name]
       |     +--ro value-name    string
       |     +--ro value?        string
       +--rw uuid?             uuid
       +--rw name* [value-name]
          +--rw value-name    string
          +--rw value?        string
  augment /tapi-common:context:
    +--rw stream-context {tapi-streaming}?
       +--ro available-stream* [uuid] {note-that-this-may-be-an-empty-list}?
       |  +--ro connection-address*      string
       |  +--ro stream-state?            stream-state {mandatory-where-stream-state-is-not-always-default}?
       |  +--ro supported-stream-type
       |  |  +--ro supported-stream-type-uuid?   -> /tapi-common:context/tapi-streaming:stream-context/supported-stream-type/uuid
       |  +--ro stream-id?               string {mandatory-where-an-alternative-id-to-the-uuid-is-available}?
       |  +--ro connection-protocol?     connection-protocol {mandatory-where-not-default-and-multiple-options-offered-in-the-supported-stream-type}?
       |  +--ro uuid                     uuid
       |  +--ro name* [value-name]
       |     +--ro value-name    string
       |     +--ro value?        string
       +--ro supported-stream-type* [uuid] {note-that-this-may-be-an-empty-list}?
          +--ro stream-type-name?              string {mandatory-where-assisted-human-interpretation-is-required}?
          +--ro record-retention?              string {mandatory-if-not-default}?
          +--ro segment-size?                  string {mandatory-where-log-is-segmented,-and-segment-size-is-considered-relevant-for-client-application-usage}?
          +--ro stream-type-content*           tapi-common:object-type {mandatory-if-the-stream-propagates-tapi-entities-if-not-present-a-separate-augment-must-explain-stream-content}?
          +--ro log-storage-strategy?          log-storage-strategy {mandatory-if-not-default}?
          +--ro log-record-strategy?           log-record-strategy {mandatory-if-not-default}?
          +--ro record-trigger?                record-trigger {mandatory-where-not-default}?
          +--ro uuid                           uuid
          +--ro name* [value-name]
          |  +--ro value-name    string
          |  +--ro value?        string
          +--rw compacted-log-details {tapi-streaming}?
          |  +--ro tombstone-retention?              string {mandatory-where-not-default}?
          |  +--ro compaction-delay?                 string {mandatory-where-not-default}?
          |  +--ro max-allowed-segment-roll-delay?   string {mandatory-if-not-default,-ie,-log-is-segmented-in-such-a-way-that-the-active-head-segment-is-not-available-for-compaction}?
          |  +--ro max-compaction-lag?               string {mandatory-where-not-default}?
          +--ro connection-protocol-details {tapi-streaming}?
          |  +--ro allowed-connection-protocols*   connection-protocol {mandatory-if-not-default}?
          |  +--ro encoding-format?                encoding-format {mandatory-if-not-default}?
          +--ro information-record-strategy {tapi-streaming}?
             +--ro record-suppression?                      record-suppression {mandatory-where-not-default}?
             +--ro value-expectation?                       value-expectation {mandatory-where-not-default}?
             +--ro allowed-dither-from-value-expectation?   value-expectation-dither {mandatory-where-not-default}?

  notifications:
    +---n stream-record
       +--ro log-record* [] {mandatory-where-there-is-one-or-more-conformant-log-records-to-stream}?
          +--ro log-record-header {mandatory-where-log-record-header-properties-are-to-be-conveyed}?
          |  +--ro tapi-context?                tapi-common:uuid {mandatory-where-there-is-information-related-to-more-than-one-tapi-context-in-the-stream}?
          |  +--ro token?                       string {mandatory-where-the-stream-type-is-from-a-compacted-log-or-it-offers-an-opportunity-to-recover-from-a-particular-record-using-the-token}?
          |  +--ro full-log-record-offset-id* [value-name]
          |  |  +--ro value-name    string
          |  |  +--ro value?        string
          |  +--ro log-append-time-stamp?       tapi-common:date-and-time {mandatory-for-compacted-logs}?
          |  +--ro entity-key?                  string {mandatory-for-compacted-logs}?
          |  +--ro record-type?                 record-type {mandatory-where-not-default}?
          |  +--ro record-authenticity-token?   string {mandatory-where-authenticity-method-providing-a-token-is-required}?
          +--ro log-record-body {mandatory-where-log-record-body-properties-are-to-be-conveyed}?
             +--ro event-time-stamp {mandatory-where-event-time-is-not-conveyed-via-another-property}?
             |  +--ro primary-time-stamp?   tapi-common:date-and-time
             |  +--ro start-time-stamp?     tapi-common:date-and-time {mandatory-where-the-time-is-only-approximately-known-and-where-the-event-is-known-to-have-occurred-after-a-particular-time}?
             |  +--ro spread?               spread {mandatory-if-not-default}?
             |  +--ro source-precision?     source-precision {mandatory-if-not-default}?
             +--ro event-source?              event-source {mandtory-where-not-default}?
             +--ro additional-event-info* [value-name] {mandatory-where-there-is-additional-info-to-convey}?
             |  +--ro value-name    string
             |  +--ro value?        string
             +--ro parent-address*            string {mandatory-where-the-class-has-a-parent-and-the-parent-is-not-context}?
             +--ro record-content?            tapi-common:object-type {mandatory-where-the-record-content-is-(the-whole-of-or-part-of)-a-standard-tapi-object}?
             +--ro profile
             |  +--ro uuid?   uuid
             |  +--ro name* [value-name]
             |     +--ro value-name    string
             |     +--ro value?        string
             +--ro condition-detector {tapi-streaming}?
             |  +--ro condition-native-name?             string
             |  +--ro measured-entity-uuid?              tapi-common:uuid {mandatory-where-there-is-a-standard-tapi-entity-(normally-the-case)}?
             |  +--ro measured-entity-native-id?         string
             |  +--ro condition-normalized-name?         string {mandatory-where-the-condition-has-a-normalized-name}?
             |  +--ro measured-entity-class?             tapi-common:object-type {mandatory-where-the-measured-entity-class-is-known}?
             |  +--ro detector-uuid?                     tapi-common:uuid {mandatory-where-the-detector-has-a-normalized-form-with-a-uuid}?
             |  +--ro detector-native-id?                string
             |  +--ro condition-detector-type?           condition-detector-type
             |  +--ro measured-entity-local-id*          string {mandatory-where-the-measured-entity-is-a-local-class-and-hence-needs-local-id-as-well-as-parent-uuid}?
             |  +--ro alarm-condition-detector-detail {tapi-streaming}?
             |     +--ro alarm-detector-state?   alarm-detector-state {mandatory-where-the-detector-state-is-not-default}?
             |     +--ro legacy-properties {mandatory-where-legacy-properties-are-to-be-conveyed}?
             |        +--ro perceived-severity?      perceived-severity {mandatory-where-severity-is-known}?
             |        +--ro service-affect?          service-affect {mandatory-where-it-is-known-whether-the-condition-detected-is-service-affecting-or-not}?
             |        +--ro is-acknowledged?         boolean {mandatory-where-there-is-a-known-state-related-to-user-acknowledgement-of-the-condition}?
             |        +--ro additional-alarm-info*   string
             +--ro any-class {tapi-streaming}?
             +--ro stream-monitor {tapi-streaming-admin}?
             |  +--ro available-stream
             |  |  +--ro available-stream-uuid?   -> /tapi-common:context/tapi-streaming:stream-context/available-stream/uuid
             |  +--ro client-id?             string
             |  +--ro client-address?        string
             |  +--ro dynamic-stream-data {mandatory-where-dynamic-data-is-to-be-reported}?
             |  |  +--ro id-of-last-record-written-to-log?   string {mandatory-where-the-most-recent-record-written-is-being-recorded}?
             |  |  +--ro id-of-last-record-read-from-log?    string {mandatory-where-last-record-read-is-being-recorded}?
             |  |  +--ro last-updated?                       tapi-common:date-and-time
             |  +--ro uuid?                  uuid
             |  +--ro name* [value-name]
             |     +--ro value-name    string
             |     +--ro value?        string
             +--ro supported-stream-type {tapi-streaming}?
             |  +--ro stream-type-name?       string {mandatory-where-assisted-human-interpretation-is-required}?
             |  +--ro record-retention?       string {mandatory-if-not-default}?
             |  +--ro segment-size?           string {mandatory-where-log-is-segmented,-and-segment-size-is-considered-relevant-for-client-application-usage}?
             |  +--ro stream-type-content*    tapi-common:object-type {mandatory-if-the-stream-propagates-tapi-entities-if-not-present-a-separate-augment-must-explain-stream-content}?
             |  +--ro log-storage-strategy?   log-storage-strategy {mandatory-if-not-default}?
             |  +--ro log-record-strategy?    log-record-strategy {mandatory-if-not-default}?
             |  +--ro record-trigger?         record-trigger {mandatory-where-not-default}?
             |  +--ro uuid?                   uuid
             |  +--ro name* [value-name]
             |     +--ro value-name    string
             |     +--ro value?        string
             +--ro available-stream {tapi-streaming}?
             |  +--ro connection-address*      string
             |  +--ro stream-state?            stream-state {mandatory-where-stream-state-is-not-always-default}?
             |  +--ro supported-stream-type
             |  |  +--ro supported-stream-type-uuid?   -> /tapi-common:context/tapi-streaming:stream-context/supported-stream-type/uuid
             |  +--ro stream-id?               string {mandatory-where-an-alternative-id-to-the-uuid-is-available}?
             |  +--ro connection-protocol?     connection-protocol {mandatory-where-not-default-and-multiple-options-offered-in-the-supported-stream-type}?
             |  +--ro uuid?                    uuid
             |  +--ro name* [value-name]
             |     +--ro value-name    string
             |     +--ro value?        string
             +--ro service-interface-point {tapi-streaming}?
                +--ro layer-protocol-name?                                layer-protocol-name
                +--ro supported-cep-layer-protocol-qualifier-instances* []
                |  +--ro layer-protocol-qualifier?   layer-protocol-qualifier
                |  +--ro number-of-cep-instances?    uint64
                +--ro available-cep-layer-protocol-qualifier-instances* []
                |  +--ro layer-protocol-qualifier?   layer-protocol-qualifier
                |  +--ro number-of-cep-instances?    uint64
                +--ro supported-payload-structure* []
                |  +--ro multiplexing-sequence*     layer-protocol-qualifier
                |  +--ro number-of-cep-instances?   uint64
                |  +--ro capacity
                |     +--ro value?   decimal64
                |     +--ro unit?    capacity-unit
                +--ro available-payload-structure* []
                |  +--ro multiplexing-sequence*     layer-protocol-qualifier
                |  +--ro number-of-cep-instances?   uint64
                |  +--ro capacity
                |     +--ro value?   decimal64
                |     +--ro unit?    capacity-unit
                +--ro direction?                                          direction
                +--ro profile* [profile-uuid]
                |  +--ro profile-uuid    -> /tapi-common:context/profile/uuid
                +--ro sink-profile* [profile-uuid]
                |  +--ro profile-uuid    -> /tapi-common:context/profile/uuid
                +--ro source-profile* [profile-uuid]
                |  +--ro profile-uuid    -> /tapi-common:context/profile/uuid
                +--ro uuid?                                               uuid
                +--ro name* [value-name]
                |  +--ro value-name    string
                |  +--ro value?        string
                +--ro administrative-state?                               administrative-state
                +--ro operational-state?                                  operational-state
                +--ro lifecycle-state?                                    lifecycle-state
                +--ro total-potential-capacity
                |  +--ro total-size
                |     +--ro value?   decimal64
                |     +--ro unit?    capacity-unit
                +--ro available-capacity
                   +--ro total-size
                      +--ro value?   decimal64
                      +--ro unit?    capacity-unit
